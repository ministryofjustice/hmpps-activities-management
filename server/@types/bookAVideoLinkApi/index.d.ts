/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/video-link-booking/id/{videoBookingId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Endpoint to return the details of a video link booking using its internal ID
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     *     * BVLS_ACCESS__RW
     */
    get: operations['getVideoLinkBookingById']
    /**
     * Endpoint to support the amendment of video link bookings
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     *     * BVLS_ACCESS__RW
     */
    put: operations['amend']
    post?: never
    /**
     * Endpoint to support cancellation of a video booking.
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     *     * BVLS_ACCESS__RW
     */
    delete: operations['cancelVideoBooking']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/room-admin/{dpsLocationId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Endpoint to support retrieval of a room including any decorations if there are any.
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     */
    get: operations['getLocationById']
    /**
     * Endpoint to support amending an already decorated room.
     * @description Only BVLS administration users can change decorated rooms.
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     */
    put: operations['amendDecoratedRoom']
    /**
     * Endpoint to support the initial decoration of a room.
     * @description Only BVLS administration users can create decorated rooms.
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     */
    post: operations['createDecoratedRoom']
    /**
     * Endpoint to support deletion of a decorated room including any schedules if there are any.
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     */
    delete: operations['deleteDecoratedLocation']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/room-admin/{dpsLocationId}/schedule/{scheduleId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /**
     * Endpoint to support amending a room schedule.
     * @description Only BVLS administration users can change room schedules.
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     */
    put: operations['amendDecoratedRoom_1']
    post?: never
    /**
     * Endpoint to support deletion of a schedule row from a room schedule.
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     */
    delete: operations['deleteSchedule']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/queue-admin/retry-dlq/{dlqName}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN */
    put: operations['retryDlq']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/queue-admin/retry-all-dlqs': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put: operations['retryAllDlqs']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/queue-admin/purge-queue/{queueName}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN */
    put: operations['purgeQueue']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/video-link-booking': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Endpoint to support the creation of video link bookings
     * @description Only external users can create probation meetings, prison users cannot create them.
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     *     * BVLS_ACCESS__RW
     */
    post: operations['create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/video-link-booking/search': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Endpoint to search for a unique matching video link booking.
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     *     * BVLS_ACCESS__RW
     */
    post: operations['searchForBooking']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/video-link-booking/request': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Endpoint to allow external users request a prison to create a video link booking for a prisoner due to arrive
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     */
    post: operations['requestBooking']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/utility/publish': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Endpoint to publish an event to the domain events SNS topic.
     * @description
     *
     *     This endpoint can only be accessed from within the ingress. Requests from elsewhere will result in a 401 response code.
     */
    post: operations['publishDomainEvent']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/room-admin/{dpsLocationId}/schedule': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Endpoint to support the creation of a schedule row for a decorated room schedule.
     * @description Only BVLS administration users can create a schedule.
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     */
    post: operations['createSchedule']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/probation-teams/user-preferences/set': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Endpoint to set the probation team preferences for a user (identified from the token content)
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     */
    post: operations['setUserProbationTeamPreferences']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/job-admin/run/{jobName}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Endpoint to trigger a job, perhaps from a cron schedule.
     * @description
     *
     *     This endpoint can only be accessed from within the ingress. Requests from elsewhere will result in a 401 response code.
     */
    post: operations['runJob']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/courts/user-preferences/set': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Endpoint to set the court preferences for a user (identified from the token content)
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     */
    post: operations['setUserCourtPreferences']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/availability': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Endpoint to assess booking availability and to suggest alternatives
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     *     * BVLS_ACCESS__RW
     */
    post: operations['checkAvailability']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/availability/by-time-slot': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Endpoint to provide locations which are available for booking at time of request
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     *     * BVLS_ACCESS__RW
     */
    post: operations['availableByTimeSlot']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/availability/by-date-and-time': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Endpoint to provide locations which are available for booking at time of request
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     *     * BVLS_ACCESS__RW
     */
    post: operations['availableByDateTime']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/schedule/probation/{probationTeamCode}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Endpoint to retrieve a schedule of bookings for a probation team
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     *     * BVLS_ACCESS__RW
     */
    get: operations['getProbationSchedule']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/schedule/prison/{prisonCode}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Endpoint to retrieve a schedule of bookings for a prison
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     *     * BVLS_ACCESS__RW
     */
    get: operations['getScheduleForPrison']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/schedule/court/{courtCode}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Endpoint to retrieve a schedule of bookings for a court
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     *     * BVLS_ACCESS__RW
     */
    get: operations['getCourtSchedule']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/reference-codes/group/{groupCode}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Endpoint to return reference data for a provided group key
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     *     * BVLS_ACCESS__RW
     */
    get: operations['getReferenceDataByGroup']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/queue-admin/get-dlq-messages/{dlqName}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN */
    get: operations['getDlqMessages']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/probation-teams': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Endpoint to return a list of probation teams for video link bookings
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     *     * BVLS_ACCESS__RW
     */
    get: operations['getProbationTeams']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/probation-teams/user-preferences': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Endpoint to return the list of probation teams select by a user (identified from the token content)
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     */
    get: operations['probationTeamsUserPreferences']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/prisons/{prisonCode}/locations': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Endpoint to return a list of suitable appointment locations sorted by description at a given prison
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     *     * BVLS_ACCESS__RW
     */
    get: operations['getAppointmentLocationsAtPrison']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/prisons/list': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Endpoint to return the list of prisons sorted by name known to the service
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     *     * BVLS_ACCESS__RW
     */
    get: operations['prisonsList']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/download-csv/probation-data-by-meeting-date': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Return details of probation video link bookings by meeting date in CSV format. Restrict the response to events occurring within 'days' of start-date.
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN */
    get: operations['downloadProbationBookingsByMeetingDate']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/download-csv/probation-data-by-booking-date': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Return details of probation video link bookings by booking date in CSV format. Restrict the response to events occurring within 'days' of start-date.
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN */
    get: operations['downloadProbationBookingsByBookingDate']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/download-csv/court-data-by-hearing-date': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Return details of court video link bookings by hearing date in CSV format. Restrict the response to events occurring within 'days' of start-date.
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN */
    get: operations['downloadCourtBookingsByHearingDate']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/download-csv/court-data-by-booking-date': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Return details of court video link bookings by booking date in CSV format. Restrict the response to events occurring within 'days' of start-date.
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN */
    get: operations['downloadCourtBookingsByBookingDate']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/courts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Endpoint to return a list of courts for video link bookings
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     *     * BVLS_ACCESS__RW
     */
    get: operations['getCourts']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/courts/user-preferences': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Endpoint to return the list of enabled courts selected by a user (identified from the token content)
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     */
    get: operations['getUserCourtPreferences']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/booking-contacts/id/{videoBookingId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Endpoint to return a list of contacts associated with a booking
     * @description
     *
     *     Requires one of the following roles:
     *     * BOOK_A_VIDEO_LINK_ADMIN
     */
    get: operations['getContactsForBooking']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    AdditionalBookingDetails: {
      /** @description The name of the contact */
      contactName: string
      /** @description The email address for the contact, must be a valid email address */
      contactEmail: string
      /** @description The contact phone number for the contact, must be a valid phone number */
      contactNumber?: string
    }
    /** @description The request with the amended video link booking details */
    AmendVideoBookingRequest: {
      /**
       * @description The booking type
       * @example COURT
       * @enum {string}
       */
      bookingType: 'COURT' | 'PROBATION'
      /** @description
       *         One or more prisoners associated with the video link booking.
       *
       *         A probation booking should only ever have one prisoner whilst a court booking can have multiple e.g. for co-defendants.
       *
       *         NOTE: CO-DEFENDANTS ARE NOT YET SUPPORTED BY THE SERVICE.
       *        */
      prisoners: components['schemas']['PrisonerDetails'][]
      /**
       * @description The court hearing type is needed if booking type is COURT, otherwise null
       * @example APPEAL
       * @enum {string}
       */
      courtHearingType?:
        | 'APPEAL'
        | 'APPLICATION'
        | 'BACKER'
        | 'BAIL'
        | 'CIVIL'
        | 'CSE'
        | 'CTA'
        | 'IMMIGRATION_DEPORTATION'
        | 'FAMILY'
        | 'TRIAL'
        | 'FCMH'
        | 'FTR'
        | 'GRH'
        | 'MDA'
        | 'MEF'
        | 'NEWTON'
        | 'PLE'
        | 'PTPH'
        | 'PTR'
        | 'POCA'
        | 'REMAND'
        | 'SECTION_28'
        | 'SEN'
        | 'TRIBUNAL'
        | 'OTHER'
        | 'UNKNOWN'
      /**
       * @description The probation meeting type is needed if booking type is PROBATION, otherwise null
       * @example PSR
       * @enum {string}
       */
      probationMeetingType?: 'OTHER' | 'PSR' | 'RR' | 'UNKNOWN'
      /**
       * @deprecated
       * @description Free text comments for the video link booking
       * @example Waiting to hear on legal representation
       */
      comments?: string
      /**
       * @description he video link for the video booking. When this is provided the HMCTS number must be null.
       * @example https://video.here.com
       */
      videoLinkUrl?: string
      /**
       * @description The HMCTS number for the appointment. When this is provided the video link must be null. Ignored for non-court bookings.
       * @example 12345678
       */
      hmctsNumber?: string
      /**
       * @description The guest PIN to access the video booking. Ignored for non-court bookings.
       * @example 46385765
       */
      guestPin?: string
      /** @description
       *           The additional booking details for the booking. Additional details are only applicable to probation bookings. Will
       *           be ignored if not a probation booking.
       *            */
      additionalBookingDetails?: components['schemas']['AdditionalBookingDetails']
      /**
       * @description Private free text notes for the booking.
       * @example Legal representation details ...
       */
      notesForStaff?: string
      /**
       * @description Public free text notes for the booking. These notes are visible outside of the service, care should be taken what is entered.
       * @example Please arrive 10 minutes early
       */
      notesForPrisoners?: string
    }
    Appointment: {
      /**
       * @description The appointment type
       * @example VLB_COURT_MAIN
       * @enum {string}
       */
      type: 'VLB_PROBATION' | 'VLB_COURT_PRE' | 'VLB_COURT_MAIN' | 'VLB_COURT_POST'
      /**
       * @description The location key for the appointment
       * @example PVI-A-1-001
       */
      locationKey: string
      /**
       * Format: date
       * @description The future date for which the appointment will start
       * @example 2022-12-23
       */
      date: string
      /**
       * @description Start time for the appointment on the day
       * @example 10:45
       */
      startTime: string
      /**
       * @description End time for the appointment on the day
       * @example 11:45
       */
      endTime: string
    }
    PrisonerDetails: {
      /**
       * @description The prison code for the prisoner
       * @example PVI
       */
      prisonCode: string
      /**
       * @description The prisoner number (NOMIS ID)
       * @example A1234AA
       */
      prisonerNumber: string
      /** @description
       *           The appointment or appointments associated with the prisoner.
       *
       *           There should only ever be one appointment for a probation meeting.
       *
       *           Court meetings can have up to 3 meetings, a pre, main hearing and post meeting. They must always have a main meeting.
       *
       *           Appointment dates and times must not overlap.
       *          */
      appointments: components['schemas']['Appointment'][]
    }
    ErrorResponse: {
      /** Format: int32 */
      status: number
      errorCode?: string
      userMessage?: string
      developerMessage?: string
      moreInfo?: string
    }
    /** @description The request with the decoration details */
    AmendDecoratedRoomRequest: {
      /**
       * @description The location usage for the location
       * @example PROBATION
       * @enum {string}
       */
      locationUsage: 'COURT' | 'PROBATION' | 'SHARED' | 'SCHEDULE'
      /**
       * @description The location usage for the location
       * @example INACTIVE
       * @enum {string}
       */
      locationStatus: 'ACTIVE' | 'INACTIVE'
      /**
       * @description Court or probation team codes allowed to use the room, can be null
       * @example [
       *       "DRBYMC"
       *     ]
       */
      allowedParties?: string[]
      /**
       * @description The prison video URL for the location, can be null
       * @example HMPS123456
       */
      prisonVideoUrl?: string
      /**
       * @description Optional comments for the decorated location, can be null
       * @example Temporarily unavailable due to ongoing work
       */
      comments?: string
    }
    Location: {
      /**
       * @description The location key for the location (this can change)
       * @example BMI-VIDEOLINK
       */
      key: string
      /**
       * @description The prison code for the location
       * @example BMI
       */
      prisonCode: string
      /**
       * @description The description for the location, can be null
       * @example VIDEO LINK
       */
      description?: string
      /**
       * @description Flag indicates if the location is enabled, true is enabled and false is disabled.
       * @example true
       */
      enabled: boolean
      /**
       * Format: uuid
       * @description The unique UUID for the prison location
       * @example ef88-efefef-3efggg-3323ddd
       */
      dpsLocationId: string
      /** @description Additional location attributes returned if any are requested and available for this location. */
      extraAttributes?: components['schemas']['RoomAttributes']
    }
    /** @description The additional attributes of a video location */
    RoomAttributes: {
      /**
       * Format: int64
       * @description The internal ID for this room attribute
       * @example 123
       */
      attributeId: number
      /**
       * @description The status of the room (ACTIVE or INACTIVE)
       * @example ACTIVE
       * @enum {string}
       */
      locationStatus: 'ACTIVE' | 'INACTIVE'
      /**
       * @description An optional message relating to an inactive status
       * @example Room damaged
       */
      statusMessage?: string
      /**
       * Format: date
       * @description The date the room is expected to be operational again
       * @example 2025-02-12
       */
      expectedActiveDate?: string
      /**
       * @description The preferred usage for this room (COURT, PROBATION, SHARED, BLOCKED, SCHEDULE)
       * @example SHARED
       * @enum {string}
       */
      locationUsage: 'COURT' | 'PROBATION' | 'SHARED' | 'SCHEDULE'
      /**
       * @description Court or probation team codes allowed to use the room (comma-separated list)
       * @example [
       *       "YRKMAG",
       *       "DRBYJS"
       *     ]
       */
      allowedParties: string[]
      /**
       * @description The video URL to access the equipment in this room
       * @example https://prison.video.link/123
       */
      prisonVideoUrl?: string
      /**
       * @description Notes for these additional attributes
       * @example some notes
       */
      notes?: string
      schedule: components['schemas']['RoomSchedule'][]
    }
    /** @description The additional schedule of usage for a video room */
    RoomSchedule: {
      /**
       * Format: int64
       * @description The internal ID for this room schedule
       * @example 345
       */
      scheduleId: number
      /**
       * @description The day when this time-slot starts
       * @example Monday
       * @enum {string}
       */
      startDayOfWeek: 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'
      /**
       * @description The day when this time-slot ends
       * @example Friday
       * @enum {string}
       */
      endDayOfWeek: 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'
      /**
       * @description Start time of this slot (24 hr clock, HH:MI)
       * @example 10:00
       */
      startTime: string
      /**
       * @description End time of this slot (24 hr clock, HH:MI)
       * @example 16:00
       */
      endTime: string
      /**
       * @description The usage of this room within this slot (PROBATION, COURT, SHARED, BLOCKED)
       * @example SHARED
       * @enum {string}
       */
      locationUsage: 'COURT' | 'PROBATION' | 'BLOCKED'
      /**
       * @description Court or probation codes (comma-separated) that can use the room within this slot
       * @example [YRKMAG,DRBYJS]
       */
      allowedParties: string[]
    }
    /** @description The request with the decoration details */
    AmendRoomScheduleRequest: {
      /**
       * @description The location usage for the schedule
       * @example PROBATION
       * @enum {string}
       */
      locationUsage: 'COURT' | 'PROBATION' | 'BLOCKED'
      /**
       * @description Court or probation team codes allowed to use the room
       * @example [
       *       "DRBYMC"
       *     ]
       */
      allowedParties?: string[]
      /**
       * Format: int32
       * @description The day of the week the schedule starts on. The week starts at 1 for Monday and finishes at 7 for Sunday.
       */
      startDayOfWeek: number
      /**
       * Format: int32
       * @description The day of the week the schedule ends on. The week starts at 1 for Monday and finishes at 7 for Sunday.
       */
      endDayOfWeek: number
      /**
       * @description Start time for the schedule
       * @example 12:00
       */
      startTime: string
      /**
       * @description End time for the schedule
       * @example 15:00
       */
      endTime: string
      /**
       * @description Notes related to the schedule
       * @example Some notes
       */
      notes?: string
    }
    RetryDlqResult: {
      /** Format: int32 */
      messagesFoundCount: number
    }
    PurgeQueueResult: {
      /** Format: int32 */
      messagesFoundCount: number
    }
    /** @description The request with the new video link booking details */
    CreateVideoBookingRequest: {
      /**
       * @description The booking type
       * @example COURT
       * @enum {string}
       */
      bookingType: 'COURT' | 'PROBATION'
      /** @description
       *         One or more prisoners associated with the video link booking.
       *
       *         A probation booking should only ever have one prisoner whilst a court booking can have multiple e.g.for co-defendants.
       *
       *         NOTE: CO-DEFENDANTS ARE NOT YET SUPPORTED BY THE SERVICE.
       *        */
      prisoners: components['schemas']['PrisonerDetails'][]
      /**
       * @description The court code is needed if booking type is COURT, otherwise null
       * @example DRBYMC
       */
      courtCode?: string
      /**
       * @description The court hearing type is needed if booking type is COURT, otherwise null
       * @example APPEAL
       * @enum {string}
       */
      courtHearingType?:
        | 'APPEAL'
        | 'APPLICATION'
        | 'BACKER'
        | 'BAIL'
        | 'CIVIL'
        | 'CSE'
        | 'CTA'
        | 'IMMIGRATION_DEPORTATION'
        | 'FAMILY'
        | 'TRIAL'
        | 'FCMH'
        | 'FTR'
        | 'GRH'
        | 'MDA'
        | 'MEF'
        | 'NEWTON'
        | 'PLE'
        | 'PTPH'
        | 'PTR'
        | 'POCA'
        | 'REMAND'
        | 'SECTION_28'
        | 'SEN'
        | 'TRIBUNAL'
        | 'OTHER'
        | 'UNKNOWN'
      /**
       * @description The probation team code is needed if booking type is PROBATION, otherwise null
       * @example BLKPPP
       */
      probationTeamCode?: string
      /**
       * @description The probation meeting type is needed if booking type is PROBATION, otherwise null
       * @example PSR
       * @enum {string}
       */
      probationMeetingType?: 'OTHER' | 'PSR' | 'RR' | 'UNKNOWN'
      /**
       * @description The video link for the video booking. When this is provided the HMCTS number must be null.
       * @example https://video.here.com
       */
      videoLinkUrl?: string
      /**
       * @description The HMCTS number for the video booking. When this is provided the video link must be null. Ignored for non-court bookings.
       * @example 12345678
       */
      hmctsNumber?: string
      /**
       * @description The guest PIN to access the video booking. Ignored for non-court bookings.
       * @example 46385765
       */
      guestPin?: string
      /** @description
       *           The additional booking details for the booking. Additional details are only applicable to probation bookings. Will
       *           be ignored if not a probation booking.
       *            */
      additionalBookingDetails?: components['schemas']['AdditionalBookingDetails']
      /**
       * @deprecated
       * @description Free text comments for the video link booking
       * @example Waiting to hear on legal representation
       */
      comments?: string
      /**
       * @description Private free text notes for the booking.
       * @example Some notes that will not be visible outside of the service
       */
      notesForStaff?: string
      /**
       * @description Public free text notes for the booking. These notes are visible outside of the service, care should be taken what is entered.
       * @example Please arrive 10 minutes early
       */
      notesForPrisoners?: string
    }
    /** @description The request with the search criteria for a video booking */
    VideoBookingSearchRequest: {
      /**
       * @description The prisoner number (NOMIS ID)
       * @example A1234AA
       */
      prisonerNumber: string
      /**
       * @description The location key for the appointment
       * @example PVI-A-1-001
       */
      locationKey: string
      /**
       * Format: date
       * @description The date for which the appointment starts
       * @example 2022-12-23
       */
      date: string
      /**
       * @description Start time for the appointment on the day
       * @example 10:45
       */
      startTime: string
      /**
       * @description End time for the appointment on the day
       * @example 11:45
       */
      endTime: string
      /**
       * @description The status of the booking to match, defaults to ACTIVE
       * @example ACTIVE
       * @enum {string}
       */
      statusCode?: 'ACTIVE' | 'CANCELLED'
    }
    /** @description A representation of a prison appointment */
    PrisonAppointment: {
      /**
       * Format: int64
       * @description The internal ID for this appointment
       * @example 123
       */
      prisonAppointmentId: number
      /**
       * @description The prison code where this appointment will take place
       * @example MDI
       */
      prisonCode: string
      /**
       * @description The prisoner number for the person attending this appointment
       * @example AA1234A
       */
      prisonerNumber: string
      /**
       * @description The appointment type
       * @example VLB
       */
      appointmentType: string
      /**
       * @description The comments for this appointment
       * @example Please be on time
       */
      comments?: string
      /**
       * @description The location of the appointment at the prison
       * @example VCC-ROOM-1
       */
      prisonLocKey: string
      /**
       * Format: date
       * @description The date of the appointment
       * @example 2024-04-05
       */
      appointmentDate: string
      /**
       * @description The start time for this appointment
       * @example 11:30
       */
      startTime: string
      /**
       * @description The end time for this appointment
       * @example 12:30
       */
      endTime: string
      /**
       * @description Public free text notes for the booking.
       * @example Please arrive 10 minutes early
       */
      notesForPrisoners?: string
      /**
       * @description The time slot the appointment falls into
       * @example PM
       * @enum {string}
       */
      timeSlot: 'AM' | 'PM' | 'ED'
    }
    VideoLinkBooking: {
      /**
       * Format: int64
       * @description The internal ID for this booking
       * @example 123
       */
      videoLinkBookingId: number
      /**
       * @description The status of this booking
       * @example ACTIVE
       * @enum {string}
       */
      statusCode: 'ACTIVE' | 'CANCELLED'
      /**
       * @description The booking type
       * @example COURT
       * @enum {string}
       */
      bookingType: 'COURT' | 'PROBATION'
      /** @description The prisone appointments related to this booking */
      prisonAppointments: components['schemas']['PrisonAppointment'][]
      /**
       * @description The court code for booking type COURT, otherwise null
       * @example DRBYMC
       */
      courtCode?: string
      /**
       * @description The court description for booking type COURT, otherwise null
       * @example Derby Justice Centre
       */
      courtDescription?: string
      /**
       * @description The court hearing type for booking type COURT, otherwise null
       * @example APPEAL
       * @enum {string}
       */
      courtHearingType?:
        | 'APPEAL'
        | 'APPLICATION'
        | 'BACKER'
        | 'BAIL'
        | 'CIVIL'
        | 'CSE'
        | 'CTA'
        | 'IMMIGRATION_DEPORTATION'
        | 'FAMILY'
        | 'TRIAL'
        | 'FCMH'
        | 'FTR'
        | 'GRH'
        | 'MDA'
        | 'MEF'
        | 'NEWTON'
        | 'PLE'
        | 'PTPH'
        | 'PTR'
        | 'POCA'
        | 'REMAND'
        | 'SECTION_28'
        | 'SEN'
        | 'TRIBUNAL'
        | 'OTHER'
        | 'UNKNOWN'
      /**
       * @description The court hearing type description, for booking type COURT, otherwise null
       * @example Appeal hearing
       */
      courtHearingTypeDescription?: string
      /**
       * @description The probation team code for booking type PROBATION, otherwise null
       * @example BLKPPP
       */
      probationTeamCode?: string
      /**
       * @description The probation team description for booking type PROBATION, otherwise null
       * @example Barnet PPOC
       */
      probationTeamDescription?: string
      /**
       * @description The probation meeting type for booking type PROBATION, otherwise null
       * @example PSR
       * @enum {string}
       */
      probationMeetingType?: 'OTHER' | 'PSR' | 'RR' | 'UNKNOWN'
      /**
       * @description The probation meeting type description, required for booking type PROBATION
       * @example Pre-sentence report
       */
      probationMeetingTypeDescription?: string
      /**
       * @description Free text comments for the video link booking
       * @example Waiting to hear on legal representation
       */
      comments?: string
      /**
       * @description The video link for the video booking. Must be a valid URL. When this is provided the HMCTS number will be null.
       * @example https://video.here.com
       */
      videoLinkUrl?: string
      /**
       * @description The HMCTS number for the video booking. When this is provided the video link will be null.
       * @example 12345678
       */
      hmctsNumber?: string
      /**
       * @description The guest PIN to access the video booking.
       * @example 46385765
       */
      guestPin?: string
      /**
       * @description True if the booking was made by a prison user.
       * @example false
       */
      createdByPrison?: boolean
      /**
       * @description Username of the person who created this booking.
       * @example creator@email.com
       */
      createdBy: string
      /**
       * Format: date-time
       * @description Date and time it was originally created.
       * @example 2024-03-13 11:03
       */
      createdAt: string
      /**
       * @description Username of the person who last amended this booking.
       * @example amender@email.com
       */
      amendedBy?: string
      /**
       * Format: date-time
       * @description Date and time of the last amendment to this booking.
       * @example 2024-03-14 14:45
       */
      amendedAt?: string
      /** @description Additional details for the booking if there are any. */
      additionalBookingDetails?: components['schemas']['AdditionalBookingDetails']
      /**
       * @description Private free text notes for the booking.
       * @example Legal representation details ...
       */
      notesForStaff?: string
      /**
       * @description Public free text notes for the booking. These notes are visible outside of the service, care should be taken what is entered.
       * @example Please arrive 10 minutes early
       */
      notesForPrisoners?: string
    }
    /** @description The request with the requested video link booking details */
    RequestVideoBookingRequest: {
      /**
       * @description The booking type
       * @example COURT
       * @enum {string}
       */
      bookingType: 'COURT' | 'PROBATION'
      /** @description The prisoner or prisoners associated with the video link booking */
      prisoners: components['schemas']['UnknownPrisonerDetails'][]
      /**
       * @description The court code is needed if booking type is COURT, otherwise null
       * @example DRBYMC
       */
      courtCode?: string
      /**
       * @description The court hearing type is needed if booking type is COURT, otherwise null
       * @example APPEAL
       * @enum {string}
       */
      courtHearingType?:
        | 'APPEAL'
        | 'APPLICATION'
        | 'BACKER'
        | 'BAIL'
        | 'CIVIL'
        | 'CSE'
        | 'CTA'
        | 'IMMIGRATION_DEPORTATION'
        | 'FAMILY'
        | 'TRIAL'
        | 'FCMH'
        | 'FTR'
        | 'GRH'
        | 'MDA'
        | 'MEF'
        | 'NEWTON'
        | 'PLE'
        | 'PTPH'
        | 'PTR'
        | 'POCA'
        | 'REMAND'
        | 'SECTION_28'
        | 'SEN'
        | 'TRIBUNAL'
        | 'OTHER'
        | 'UNKNOWN'
      /**
       * @description The probation team code is needed if booking type is PROBATION, otherwise null
       * @example BLKPPP
       */
      probationTeamCode?: string
      /**
       * @description The probation meeting type is needed if booking type is PROBATION, otherwise null
       * @example PSR
       * @enum {string}
       */
      probationMeetingType?: 'OTHER' | 'PSR' | 'RR' | 'UNKNOWN'
      /**
       * @description Free text comments for the video link booking
       * @example Waiting to hear on legal representation
       */
      comments?: string
      /**
       * @description The video link for the appointment.
       * @example https://video.here.com
       */
      videoLinkUrl?: string
      /** @description
       *           The additional booking details for the booking. Additional details are only applicable to probation bookings. Will
       *           be ignored if not a probation booking.
       *            */
      additionalBookingDetails?: components['schemas']['AdditionalBookingDetails']
      /**
       * @description Private free text notes for the booking.
       * @example Some notes that will not be visible outside of the service
       */
      notesForStaff?: string
    }
    RequestedAppointment: {
      /**
       * @description The appointment type
       * @example VLB_COURT_MAIN
       * @enum {string}
       */
      type: 'VLB_PROBATION' | 'VLB_COURT_PRE' | 'VLB_COURT_MAIN' | 'VLB_COURT_POST'
      /**
       * Format: date
       * @description The future date for which the appointment will start
       * @example 2022-12-23
       */
      date: string
      /**
       * @description Start time for the appointment on the day
       * @example 10:45
       */
      startTime: string
      /**
       * @description End time for the appointment on the day
       * @example 11:45
       */
      endTime: string
    }
    UnknownPrisonerDetails: {
      /**
       * @description The prison code for the prison which the prisoner is due to arrive
       * @example PVI
       */
      prisonCode: string
      /**
       * @description The prisoner's first name
       * @example Joe
       */
      firstName: string
      /**
       * @description The prisoner's last name
       * @example Bloggs
       */
      lastName: string
      /**
       * Format: date
       * @description The prisoner's date of birth
       * @example 1970-01-01
       */
      dateOfBirth: string
      /** @description
       *           The appointment or appointments associated with the prisoner.
       *
       *           There should only ever be one appointment for a probation meeting.
       *
       *           Court meetings can have up to 3 meetings, a pre, main hearing and post meeting. They must always have a main meeting.
       *
       *           Appointment dates and times must not overlap.
       *          */
      appointments: components['schemas']['RequestedAppointment'][]
    }
    /** @description Describes an event to be published to the domain events SNS topic */
    PublishEventUtilityModel: {
      /** @enum {string} */
      event: 'APPOINTMENT_CREATED' | 'VIDEO_BOOKING_CREATED' | 'VIDEO_BOOKING_CANCELLED' | 'VIDEO_BOOKING_AMENDED'
      /**
       * @description A list of entity identifiers to be published with the event
       * @example [
       *       1,
       *       2
       *     ]
       */
      identifiers: number[]
    }
    /** @description The request with the new decoration details */
    CreateDecoratedRoomRequest: {
      /**
       * @description The location usage for the location
       * @example PROBATION
       * @enum {string}
       */
      locationUsage: 'COURT' | 'PROBATION' | 'SHARED' | 'SCHEDULE'
      /**
       * @description The location usage for the location
       * @example INACTIVE
       * @enum {string}
       */
      locationStatus: 'ACTIVE' | 'INACTIVE'
      /**
       * @description Court or probation team codes allowed to use the room, can be null
       * @example [
       *       "DRBYMC"
       *     ]
       */
      allowedParties?: string[]
      /**
       * @description The prison video URL for the location, can be null
       * @example HMPS123456
       */
      prisonVideoUrl?: string
      /**
       * @description Optional comments for the decorated location, can be null
       * @example Temporarily unavailable due to ongoing work
       */
      comments?: string
    }
    /** @description The request with the new schedule details */
    CreateRoomScheduleRequest: {
      /**
       * @description The location usage for the schedule
       * @example PROBATION
       * @enum {string}
       */
      locationUsage: 'COURT' | 'PROBATION' | 'BLOCKED'
      /**
       * @description Court or probation team codes allowed to use the room
       * @example [
       *       "DRBYMC"
       *     ]
       */
      allowedParties?: string[]
      /**
       * Format: int32
       * @description The day of the week the schedule starts on. The week starts at 1 for Monday and finishes at 7 for Sunday.
       */
      startDayOfWeek: number
      /**
       * Format: int32
       * @description The day of the week the schedule ends on. The week starts at 1 for Monday and finishes at 7 for Sunday.
       */
      endDayOfWeek: number
      /**
       * @description Start time for the schedule
       * @example 12:00
       */
      startTime: string
      /**
       * @description End time for the schedule
       * @example 15:00
       */
      endTime: string
      /**
       * @description Notes related to the schedule
       * @example Some notes
       */
      notes?: string
    }
    /** @description The request body containing the user probation team preferences */
    SetProbationTeamPreferencesRequest: {
      /** @description The list of probation team codes to set as the preferences for this username. */
      probationTeamCodes: string[]
    }
    /** @description Describes the response from setting the user probation team preferences */
    SetProbationTeamPreferencesResponse: {
      /**
       * Format: int32
       * @description The count of probation teams saved as preferences for this user
       */
      probationTeamsSaved: number
    }
    /** @description The request body containing the user court preferences */
    SetCourtPreferencesRequest: {
      /** @description The list of court codes to set as the preferences for this username. */
      courtCodes: string[]
    }
    /** @description Describes the response from setting the user court preferences */
    SetCourtPreferencesResponse: {
      /**
       * Format: int32
       * @description The count of courts saved as preferences for this user
       */
      courtsSaved: number
    }
    /** @description The request containing the times and locations of hearings to check for availability */
    AvailabilityRequest: {
      /**
       * @description The booking type
       * @example COURT
       * @enum {string}
       */
      bookingType: 'COURT' | 'PROBATION'
      /**
       * @description The court code or probation team code
       * @example DRBYMC
       */
      courtOrProbationCode: string
      /**
       * @description The prison code where these appointment will take place
       * @example MDI
       */
      prisonCode: string
      /**
       * Format: date
       * @description The date for the appointments on this booking (must all be on the same day)
       * @example 2024-04-05
       */
      date: string
      /** @description If present, the prison location and start/end time of the requested pre hearing, else null */
      preAppointment?: components['schemas']['LocationAndInterval']
      /** @description The main appointment which is always present */
      mainAppointment: components['schemas']['LocationAndInterval']
      /** @description If present, the prison location and start/end time of the post hearing, else null */
      postAppointment?: components['schemas']['LocationAndInterval']
      /**
       * Format: int64
       * @description Exclude the video link booking with this ID from the availability check. Useful when checking availability during the amending of a booking.
       */
      vlbIdToExclude?: number
    }
    /** @description A time interval between a start and end time */
    Interval: {
      /**
       * @description The interval start time, inclusive. ISO-8601 format (hh:mm)
       * @example 09:00
       */
      start: string
      /**
       * @description The interval end time (inclusive). ISO-8601 format (hh:mm)
       * @example 09:30
       */
      end: string
    }
    /** @description The prison location key and start/end interval for an appointment slot */
    LocationAndInterval: {
      /**
       * @description The location of the appointment at the prison
       * @example VCC-ROOM-1
       */
      prisonLocKey: string
      /** @description The start and end time of a prison appointment to define the interval */
      interval?: components['schemas']['Interval']
    }
    /** @description Availability check response */
    AvailabilityResponse: {
      /**
       * @description Set to true when all the locations and times for this booking are available, or false when not.
       * @example true
       */
      availabilityOk: boolean
      /** @description A list of alternative times and locations for the requested appointment on this booking, or empty list */
      alternatives: components['schemas']['BookingOption'][]
    }
    /** @description Video link booking option */
    BookingOption: {
      /** @description The pre appointment location and time */
      pre?: components['schemas']['LocationAndInterval']
      /** @description The main appointment location and time */
      main: components['schemas']['LocationAndInterval']
      /** @description The post appointment location and time */
      post?: components['schemas']['LocationAndInterval']
    }
    /** @description The search criteria for looking up available locations */
    TimeSlotAvailabilityRequest: {
      /**
       * @description The prison code for the prisoner
       * @example PVI
       */
      prisonCode: string
      /**
       * @description The booking type
       * @example PROBATION
       * @enum {string}
       */
      bookingType: 'COURT' | 'PROBATION'
      /**
       * @description The court code is needed if booking type is COURT, otherwise null
       * @example DRBYMC
       */
      courtCode?: string
      /**
       * @description The probation team code is needed if booking type is PROBATION, otherwise null
       * @example BLKPPP
       */
      probationTeamCode?: string
      /**
       * Format: date
       * @description The present or future date when the room is needed
       * @example 2050-01-01
       */
      date: string
      /**
       * Format: int32
       * @description Rooms can be booked in 30 minutes slots upto a maximum of 120 minutes (two hours)
       * @example 60
       */
      bookingDuration: number
      /**
       * @description The time slots to look up available locations. If null, then all time slots are considered.
       * @example [
       *       "AM"
       *     ]
       */
      timeSlots?: ('AM' | 'PM' | 'ED')[]
      /**
       * Format: int64
       * @description Exclude the video link booking with this ID from the availability check. Useful when checking availability during the amending of a booking.
       */
      vlbIdToExclude?: number
    }
    AvailableLocation: {
      name: string
      /**
       * @description The start time in 15 minute slots when the location is available in ISO time format (HH:MI)
       * @example 12:45
       */
      startTime: string
      /**
       * @description The end time in 15 minute slots when the location is available in ISO time format (HH:MI)
       * @example 12:45
       */
      endTime: string
      /**
       * @description The unique key for the prison location (this can change)
       * @example BMI-VIDEOLINK
       */
      dpsLocationKey: string
      /**
       * Format: uuid
       * @description The unique identifier for the prison location
       * @example ef88-efefef-3efggg-3323ddd
       */
      dpsLocationId: string
      /**
       * @description The usage for this location, will be null if no attributes set up for location
       * @example PROBATION
       * @enum {string}
       */
      usage?: 'COURT' | 'PROBATION' | 'SHARED' | 'SCHEDULE'
      /**
       * @description The time slot the available location falls into
       * @example PM
       * @enum {string}
       */
      timeSlot: 'AM' | 'PM' | 'ED'
    }
    AvailableLocationsResponse: {
      locations: components['schemas']['AvailableLocation'][]
    }
    /** @description The search criteria for looking up available locations */
    DateTimeAvailabilityRequest: {
      /**
       * @description The prison code for the prisoner
       * @example PVI
       */
      prisonCode: string
      /**
       * @description The booking type
       * @example PROBATION
       * @enum {string}
       */
      bookingType: 'COURT' | 'PROBATION'
      /**
       * @description The court code is needed if booking type is COURT, otherwise null
       * @example DRBYMC
       */
      courtCode?: string
      /**
       * @description The probation team code is needed if booking type is PROBATION, otherwise null
       * @example BLKPPP
       */
      probationTeamCode?: string
      /**
       * Format: date
       * @description The present or future date when the room is needed
       * @example 2050-01-01
       */
      date: string
      /**
       * @description Start time for on the day
       * @example 10:45
       */
      startTime: string
      /**
       * @description End time for on the day
       * @example 11:45
       */
      endTime: string
      /**
       * Format: int64
       * @description Exclude the appointment with this ID from the availability check. Useful when checking availability during the amending of a booking.
       */
      appointmentToExclude?: number
    }
    /** @description An item on a schedule i.e. prison appointments and their booking details */
    ScheduleItem: {
      /**
       * Format: int64
       * @description The internal ID for the video booking
       * @example 123
       */
      videoBookingId: number
      /**
       * Format: int64
       * @description The internal ID for an appointment related to a booking. It is unique in this list
       * @example 123
       */
      prisonAppointmentId: number
      /**
       * @description The booking type
       * @example COURT
       * @enum {string}
       */
      bookingType: 'COURT' | 'PROBATION'
      /**
       * @description The booking status
       * @example ACTIVE
       * @enum {string}
       */
      statusCode: 'ACTIVE' | 'CANCELLED'
      /**
       * @description The video link URL to attend this event
       * @example https://video.link.url
       */
      videoUrl?: string
      /**
       * @description The comments provided for the booking
       * @example Free text comment
       */
      bookingComments?: string
      /**
       * @description True if the booking was made by a prison user
       * @example false
       * @enum {boolean}
       */
      createdByPrison: 'true' | 'false'
      /**
       * Format: int64
       * @description The internal court ID, if this is a court booking
       * @example 1234
       */
      courtId?: number
      /**
       * @description The court code, if this is a court booking
       * @example DRBYMC
       */
      courtCode?: string
      /**
       * @description The court description, if this is a court booking
       * @example Derby Magistrates
       */
      courtDescription?: string
      /**
       * @description The court hearing type code, if this is a court booking
       * @example APPEAL
       * @enum {string}
       */
      hearingType?:
        | 'APPEAL'
        | 'APPLICATION'
        | 'BACKER'
        | 'BAIL'
        | 'CIVIL'
        | 'CSE'
        | 'CTA'
        | 'IMMIGRATION_DEPORTATION'
        | 'FAMILY'
        | 'TRIAL'
        | 'FCMH'
        | 'FTR'
        | 'GRH'
        | 'MDA'
        | 'MEF'
        | 'NEWTON'
        | 'PLE'
        | 'PTPH'
        | 'PTR'
        | 'POCA'
        | 'REMAND'
        | 'SECTION_28'
        | 'SEN'
        | 'TRIBUNAL'
        | 'OTHER'
        | 'UNKNOWN'
      /**
       * @description The court hearing type description, if this is a court booking
       * @example Appeal hearing
       */
      hearingTypeDescription?: string
      /**
       * Format: int64
       * @description The internal probation team ID, if this is a probation booking
       * @example 1234
       */
      probationTeamId?: number
      /**
       * @description The internal probation team code, if this is a probation booking
       * @example BLCKPPP
       */
      probationTeamCode?: string
      /**
       * @description The probation team description, if this is a probation booking
       * @example Blackpool PP
       */
      probationTeamDescription?: string
      /**
       * @description The probation meeting type code, if this is a probation booking
       * @example PSR
       * @enum {string}
       */
      probationMeetingType?: 'OTHER' | 'PSR' | 'RR' | 'UNKNOWN'
      /**
       * @description The probation meeting type description, if this is a probation booking
       * @example Pre-sentence report
       */
      probationMeetingTypeDescription?: string
      /**
       * @description The prison code
       * @example MDI
       */
      prisonCode: string
      /**
       * @description The prison name
       * @example HMP Moorland
       */
      prisonName: string
      /**
       * @description The prisoner number (NOMS ID)
       * @example A1234AA
       */
      prisonerNumber: string
      /**
       * @description The appointment type
       * @example 1234
       * @enum {string}
       */
      appointmentType: 'VLB_PROBATION' | 'VLB_COURT_PRE' | 'VLB_COURT_MAIN' | 'VLB_COURT_POST'
      /**
       * @description The appointment type description
       * @example Court - main hearing
       */
      appointmentTypeDescription?: string
      /**
       * @description The appointment comments
       * @example This is a free text comment
       */
      appointmentComments?: string
      /**
       * @description The location key for the room where the appointment will take place in the prison.
       * @example MDI-VCC-1
       */
      prisonLocKey: string
      /**
       * @description The location description where the appointment takes place. The localName from the locations-inside-prison service).
       * @example VCC-crown-conference-room-1
       */
      prisonLocDesc: string
      /**
       * Format: uuid
       * @description The unique UUID for the location where the appointment takes place. The id field from the locations-inside-prison service.
       * @example a4fe3fef-34fd-4354fde-a12efe
       */
      dpsLocationId: string
      /**
       * Format: date
       * @description The date for this appointment ISO format (YYYY-MM-DD)
       * @example 2024-10-03
       */
      appointmentDate: string
      /**
       * @description The start time for the appointment ISO time format (HH:MI)
       * @example 12:45
       */
      startTime: string
      /**
       * @description The end time for the appointment ISO time format (HH:MI)
       * @example 13:15
       */
      endTime: string
      /**
       * Format: date-time
       * @description The timestamp when the booking was created
       * @example 2024-10-01 14:45
       */
      createdTime: string
      /**
       * @description The username of the person who created the booking
       * @example creator@email.com
       */
      createdBy: string
      /**
       * Format: date-time
       * @description The timestamp when the booking was last updated
       * @example 2024-10-02 14:45
       */
      updatedTime?: string
      /**
       * @description The username of the person who updated the booking
       * @example amender@email.com
       */
      updatedBy?: string
      /**
       * @description The name of the probation officer if this is a probation booking and present
       * @example Jane Doe
       */
      probationOfficerName?: string
      /**
       * @description The email address of the probation officer if this is a probation booking and present
       * @example jane.doe@somewhere.com
       */
      probationOfficerEmailAddress?: string
      /**
       * @description Private free text notes for the booking.
       * @example Legal representation details ...
       */
      notesForStaff?: string
      /**
       * @description Public free text notes for the booking.
       * @example Please arrive 10 minutes early
       */
      notesForPrisoners?: string
      /**
       * @description The HMCTS number for the video booking. When this is provided the video link will be null.
       * @example 12345678
       */
      hmctsNumber?: string
      /**
       * @description The guest PIN to access the video booking.
       * @example 46385765
       */
      guestPin?: string
    }
    /** @description Describes the details of a reference code */
    ReferenceCode: {
      /**
       * Format: int64
       * @description An internally-generated unique identifier for this reference code.
       * @example 12345
       */
      referenceCodeId: number
      /**
       * @description The group name for related reference codes.
       * @example COURT_HEARING_TYPE
       */
      groupCode: string
      /**
       * @description The code for this reference data
       * @example SEN
       */
      code: string
      /**
       * @description A fuller description of the reference code
       * @example Sentencing hearing
       */
      description?: string
      /**
       * @description A boolean value to show whether enabled or not.
       * @example true
       */
      enabled: boolean
    }
    DlqMessage: {
      body: {
        [key: string]: unknown
      }
      messageId: string
    }
    GetDlqResult: {
      /** Format: int32 */
      messagesFoundCount: number
      /** Format: int32 */
      messagesReturnedCount: number
      messages: components['schemas']['DlqMessage'][]
    }
    /** @description Describes the details of a probation team */
    ProbationTeam: {
      /**
       * Format: int64
       * @description An internally-generated unique identifier for this probation team.
       * @example 12345
       */
      probationTeamId: number
      /**
       * @description A short code for this probation team.
       * @example NORTHWEST-PCC
       */
      code: string
      /**
       * @description A fuller description for this probation team
       * @example North West Primary Care
       */
      description: string
      /**
       * @description A boolean value to show whether enabled for video link bookings.
       * @example true
       */
      enabled: boolean
      /**
       * @description Notes relating to this probation team for opening hours, postal address, main contact.
       * @example Free form notes
       */
      notes?: string
    }
    /** @description Describes the details of a prison */
    Prison: {
      /**
       * Format: int64
       * @description An internally-generated unique identifier for this prison.
       * @example 12345
       */
      prisonId: number
      /**
       * @description A short code for this prison.
       * @example BMI
       */
      code: string
      /**
       * @description A fuller description for this prison
       * @example HMP Birmingham
       */
      name: string
      /**
       * @description A boolean value to show whether the prison is enabled for self-service video link bookings by court/probation.
       * @example true
       */
      enabled: boolean
      /**
       * @description Notes relating to this prison, e.g. number of video-enabled rooms, address.
       * @example Free form notes
       */
      notes?: string
    }
    /** @description Describes the details of a court */
    Court: {
      /**
       * Format: int64
       * @description An internally-generated unique identifier for this court.
       * @example 12345
       */
      courtId: number
      /**
       * @description A short code for this court.
       * @example AVONCC
       */
      code: string
      /**
       * @description A fuller description for this court
       * @example Avon Crown Court
       */
      description: string
      /**
       * @description A boolean value to show whether enabled for video link bookings.
       * @example true
       */
      enabled: boolean
      /**
       * @description Notes relating to this court for opening hours, postal address, main contact.
       * @example Free form notes
       */
      notes?: string
    }
    /** @description Describes the details of a booking contact */
    BookingContact: {
      /**
       * Format: int64
       * @description Describes the internal id of the video booking
       * @example 123
       */
      videoBookingId: number
      /**
       * @description Describes the contact type
       * @example PRISON
       * @enum {string}
       */
      contactType: 'USER' | 'COURT' | 'PROBATION' | 'PRISON' | 'THIRD_PARTY'
      /**
       * @description Describes the contact name (optional)
       * @example Mr. Person-contact
       */
      name?: string
      /**
       * @description Describes the position or role of the contact person (optional)
       * @example BVLS Administrator
       */
      position?: string
      /**
       * @description Describes the email address of this contact (optional)
       * @example example@example.com
       */
      email?: string
      /**
       * @description Describes the telephone number of this contact (optional)
       * @example 00902 0909779
       */
      telephone?: string
      /**
       * @description
       *         Describes the whether the contact is a primary contact or not, true if yes otherwise false.
       *
       *         There will only ever be one primary contact for each contact type e.g. a court will only have one primary contact.
       *
       * @example true
       */
      primaryContact: boolean
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  getVideoLinkBookingById: {
    parameters: {
      query?: never
      header?: never
      path: {
        videoBookingId: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Video link booking details */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['VideoLinkBooking']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The video booking ID was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  amend: {
    parameters: {
      query?: never
      header?: never
      path: {
        videoBookingId: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AmendVideoBookingRequest']
      }
    }
    responses: {
      /** @description The unique identifier of the video booking */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': number
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The video booking ID was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  cancelVideoBooking: {
    parameters: {
      query?: never
      header?: never
      path: {
        videoBookingId: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Video booking was cancelled. */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The video booking ID was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getLocationById: {
    parameters: {
      query?: never
      header?: never
      path: {
        dpsLocationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successfully returned the requested room. */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Location']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The room was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  amendDecoratedRoom: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description The identifier of the DPS location for the scheduled row to be amended. */
        dpsLocationId: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AmendDecoratedRoomRequest']
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Location']
        }
      }
      /** @description Successfully amended the decorated room. */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Location']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The decorated room to be amended was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  createDecoratedRoom: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description The identifier of the DPS location for the scheduled row to be created. */
        dpsLocationId: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateDecoratedRoomRequest']
      }
    }
    responses: {
      /** @description Successfully created the decorated room. */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Location']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The room to be decorated was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  deleteDecoratedLocation: {
    parameters: {
      query?: never
      header?: never
      path: {
        dpsLocationId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successfully deleted the decorated room. */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  amendDecoratedRoom_1: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description The identifier of the DPS location for the room schedule to be amended. */
        dpsLocationId: string
        /** @description The identifier of the room schedule to be amended. */
        scheduleId: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AmendRoomScheduleRequest']
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['RoomSchedule']
        }
      }
      /** @description Successfully amended the room schedule. */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['RoomSchedule']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The room schedule was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  deleteSchedule: {
    parameters: {
      query?: never
      header?: never
      path: {
        dpsLocationId: string
        scheduleId: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successfully deleted schedule row from the schedule. */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  retryDlq: {
    parameters: {
      query?: never
      header?: never
      path: {
        dlqName: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['RetryDlqResult']
        }
      }
    }
  }
  retryAllDlqs: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['RetryDlqResult'][]
        }
      }
    }
  }
  purgeQueue: {
    parameters: {
      query?: never
      header?: never
      path: {
        queueName: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PurgeQueueResult']
        }
      }
    }
  }
  create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateVideoBookingRequest']
      }
    }
    responses: {
      /** @description The unique identifier of the created video booking */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': number
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  searchForBooking: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['VideoBookingSearchRequest']
      }
    }
    responses: {
      /** @description The matching video link booking details */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['VideoLinkBooking']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  requestBooking: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['RequestVideoBookingRequest']
      }
    }
    responses: {
      /** @description The video link booking has been requested */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  publishDomainEvent: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PublishEventUtilityModel']
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/plain': string
        }
      }
    }
  }
  createSchedule: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description The identifier of the DPS location for the scheduled row to be created. */
        dpsLocationId: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateRoomScheduleRequest']
      }
    }
    responses: {
      /** @description Successfully added the schedule row to the room's schedule */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['RoomSchedule']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The decorated room was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  setUserProbationTeamPreferences: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['SetProbationTeamPreferencesRequest']
      }
    }
    responses: {
      /** @description Count of the number of probation teams saved in this request */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['SetProbationTeamPreferencesResponse']
        }
      }
      /** @description Invalid request provided */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  runJob: {
    parameters: {
      query?: never
      header?: never
      path: {
        jobName: 'COURT_HEARING_LINK_REMINDER' | 'PROBATION_OFFICER_DETAILS_REMINDER'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/plain': string
        }
      }
    }
  }
  setUserCourtPreferences: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['SetCourtPreferencesRequest']
      }
    }
    responses: {
      /** @description Count of the number of courts saved in this request */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['SetCourtPreferencesResponse']
        }
      }
      /** @description Invalid request provided */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  checkAvailability: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AvailabilityRequest']
      }
    }
    responses: {
      /** @description Availability response, including any suggested alternative booking options */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AvailabilityResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  availableByTimeSlot: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['TimeSlotAvailabilityRequest']
      }
    }
    responses: {
      /** @description Available locations response, including available locations for given criteria */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AvailableLocationsResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  availableByDateTime: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['DateTimeAvailabilityRequest']
      }
    }
    responses: {
      /** @description Available locations response, including available locations for given criteria */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AvailableLocationsResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getProbationSchedule: {
    parameters: {
      query?: {
        /** @description A date in ISO format (YYYY-MM-DD). Defaults to today if not supplied. */
        date?: string
        /** @description Include cancelled bookings (true or false), defaults to false. */
        includeCancelled?: boolean
      }
      header?: never
      path: {
        /** @description A probation team code */
        probationTeamCode: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description List of scheduled video link appointments and booking details for one probation team */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ScheduleItem'][]
        }
      }
      /** @description Bad request. Message contains the detail. */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getScheduleForPrison: {
    parameters: {
      query?: {
        /** @description A date in ISO format (YYYY-MM-DD). Defaults to today if not supplied. */
        date?: string
        /** @description Include cancelled bookings (true or false), defaults to false. */
        includeCancelled?: boolean
      }
      header?: never
      path: {
        /** @description A prison code */
        prisonCode: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description List of scheduled video link appointments and booking details at the prison. */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ScheduleItem'][]
        }
      }
      /** @description Bad request. Message contains the detail. */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getCourtSchedule: {
    parameters: {
      query?: {
        /** @description A date in ISO format (YYYY-MM-DD). Defaults to today if not supplied. */
        date?: string
        /** @description Include cancelled bookings (true or false), defaults to false. */
        includeCancelled?: boolean
      }
      header?: never
      path: {
        /** @description A court code */
        courtCode: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description List of scheduled video link appointments and booking details for one court */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ScheduleItem'][]
        }
      }
      /** @description Bad request. Message contains the detail. */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getReferenceDataByGroup: {
    parameters: {
      query?: {
        /** @description Enabled only, true or false. When true only enabled values will be returned. Defaults to true if not supplied. */
        enabledOnly?: boolean
      }
      header?: never
      path: {
        /** @description EnabledOnly true or false. Defaults to false if not supplied. */
        groupCode: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description List of reference data codes/values */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ReferenceCode'][]
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getDlqMessages: {
    parameters: {
      query?: {
        maxMessages?: number
      }
      header?: never
      path: {
        dlqName: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['GetDlqResult']
        }
      }
    }
  }
  getProbationTeams: {
    parameters: {
      query?: {
        /** @description Enabled only, true or false. When true only returns enabled probation teams. Defaults to true if not supplied. */
        enabledOnly?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Probation teams */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ProbationTeam'][]
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  probationTeamsUserPreferences: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Probation teams select by this user */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ProbationTeam'][]
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getAppointmentLocationsAtPrison: {
    parameters: {
      query?: {
        /** @description Enabled (active) locations only, true or false. Defaults to true if not supplied. */
        enabledOnly?: boolean
        /** @description Video link only, true or false. When true only returns video link suitable locations. Defaults to true if not supplied. */
        videoLinkOnly?: boolean
      }
      header?: never
      path: {
        /** @description The prison code for which locations will be retrieved. */
        prisonCode: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Locations */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Location'][]
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  prisonsList: {
    parameters: {
      query?: {
        /** @description EnabledOnly true or false. Defaults to false if not supplied. */
        enabledOnly?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description List of prisons */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Prison'][]
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  downloadProbationBookingsByMeetingDate: {
    parameters: {
      query: {
        /** @description The earliest meeting date for which to return event details. */
        'start-date': string
        /** @description Return details of events occurring within this number of days of start-date. A maximum of 365 days. */
        days?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  downloadProbationBookingsByBookingDate: {
    parameters: {
      query: {
        /** @description The earliest booking date for which to return bookings for. */
        'start-date': string
        /** @description Return details of bookings occurring within this number of days of start-date. A maximum of 365 days. */
        days?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  downloadCourtBookingsByHearingDate: {
    parameters: {
      query: {
        /** @description The earliest hearing date for which to return event details. */
        'start-date': string
        /** @description Return details of events occurring within this number of days of start-date. A maximum of 365 days. */
        days?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  downloadCourtBookingsByBookingDate: {
    parameters: {
      query: {
        /** @description The earliest booking date for which to return bookings for. */
        'start-date': string
        /** @description Return details of bookings occurring within this number of days of start-date. A maximum of 365 days. */
        days?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getCourts: {
    parameters: {
      query?: {
        /** @description Enabled only, true or false. When true only returns enabled courts. Defaults to true if not supplied. */
        enabledOnly?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Courts */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Court'][]
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getUserCourtPreferences: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Courts selected by this user */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Court'][]
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getContactsForBooking: {
    parameters: {
      query?: never
      header?: never
      path: {
        videoBookingId: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Contacts for this booking */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['BookingContact'][]
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The video booking ID was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
}
