{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "moj/components/filter/macro.njk" import mojFilter %}

{% macro activitiesTableFilters(locations, filterItems) %}
  {% set filterOptionsHtml %}

    {% set locationOptions = [{ value: '-', text: '' }] %}
    {% for location in locations %}
      {% set options = (locationOptions.push( { value: location.locationId, text: location.userDescription }), locationOptions) %}
    {% endfor %}

    {{ govukRadios({
      id: "location-type",
      name: "locationType",
      classes: "govuk-radios--small",
      fieldset: {
        legend: {
          text: 'Location',
          classes: 'govuk-fieldset__legend--m'
        }
      },
      items: [
        {
          value: "ALL",
          text: "All locations",
          checked: filterItems.locationType == 'ALL'
        },
        {
          value: LocationType.OUT_OF_CELL,
          text: "Search for a location",
          checked: filterItems.locationType == LocationType.OUT_OF_CELL,
          conditional: {
          html: govukSelect({
            id: "locationId",
            name: "locationId",
            label: {
              text: "Start typing a location and select from the list."
            },
            errorMessage: validationErrors | findError('locationId'),
            value: filterItems.locationId,
            items: locationOptions
          })
        }
        },
        {
          value: LocationType.IN_CELL,
          text: "In cell",
          checked: filterItems.locationType == LocationType.IN_CELL
        },
        {
          value: LocationType.OFF_WING,
          text: "Off wing - not listed",
          checked: filterItems.locationType == LocationType.OFF_WING
        },
        {
          value: LocationType.ON_WING,
          text: "On wing",
          checked: filterItems.locationType == LocationType.ON_WING
        }
      ]
    }) }}

    {{ govukCheckboxes({
      idPrefix: 'sessionFilters',
      name: 'sessionFilters',
      classes: "govuk-checkboxes--small",
      fieldset: {
        legend: {
          text: 'Time period',
          classes: 'govuk-fieldset__legend--m'
        }
      },
      items: filterItems.sessionFilters
    }) }}

    {{ govukCheckboxes({
      idPrefix: 'categoryFilters',
      name: 'categoryFilters',
      classes: "govuk-checkboxes--small",
      fieldset: {
        legend: {
          text: 'Categories',
          classes: 'govuk-fieldset__legend--m'
        }
      },
      formGroup: {
        classes: 'govuk-!-margin-bottom-0'
      },
      items: filterItems.categoryFilters
    }) }}
    <div class="govuk-!-margin-bottom-4">
      <a href="#" class="govuk-link govuk-link--no-visited-state" data-module="select-all-link" data-checkbox-name="categoryFilters"></a>
    </div>

    {{ govukButton({
      text: 'Apply filters'
    }) }}

  {% endset %}

  <div class="moj-filter-layout__filter moj-filter-layout__flex govuk-!-display-none-print">
    {{ mojFilter({
      heading: {
        text: 'Filters'
      },
      attributes: {
        'data-filter-start-shown': 'true'
      },
      optionsHtml: filterOptionsHtml
    }) }}
  </div>
{% endmacro %}
