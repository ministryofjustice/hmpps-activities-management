{% if multiplePrisonerActivityAllocationEnabled %}
<div class="govuk-grid-row">
    <div class="govuk-grid-column-full govuk-!-margin-bottom-4">
        <p class="govuk-body">You can:</p>
        <ul class="govuk-list govuk-list--bullet">
            <li>find someone to allocate</li>
            <li><a class="govuk-link" href="/activities/allocations/create/multiple/set-up-method?scheduleId={{ schedule.id }}">allocate a group of people</a> at the same time</li>
        </ul>
    </div>
</div>
{% endif %}
<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds-from-desktop govuk-grid-column-one-half">
        {% if multiplePrisonerActivityAllocationEnabled %}
        <p class="govuk-heading-s">Find someone to allocate</p>
        <p class="govuk-body">
            The list shows people who are not currently allocated or on the waitlist. Use the filters to identify candidates, or search for someone, then select them.
        </p>
        {% else %}
        <p>
            Select the person you want to allocate. The list shows people who are not currently allocated or on the waitlist. People who have had an application declined are shown.
            Use the filters to identify candidates, or search for someone.
        </p>
        {% endif %}
    </div>
    <div class="govuk-grid-column-one-third-from-desktop govuk-grid-column-one-half">
        <form method='GET'>
            <label class="govuk-label" for="candidate-search-input">Search by name or prison number:</label>
            {{ searchBar({
                inputParams: {
                    id: 'candidate-search-input',
                    name: 'candidateQuery',
                    value: filters.candidateQuery
                },
                buttonParams: {
                    text: 'Search'
                }
            }) }}
        </form>
    </div>
</div>
<div class='filter'>
    <form method='GET'>
        <div class="filter__items" id='candidates-filter'>
            {% set employmentOptions = [
                {
                    value: 'Not allocated to any activity',
                    text: 'Not allocated to any activity',
                    selected: filters.employmentFilter == 'Not allocated to any activity'
                },
                {
                    value: 'Not in work',
                    text: 'Not in work',
                    selected: filters.employmentFilter == 'Not in work'
                },
                {
                    value: 'In work',
                    text: 'In work',
                    selected: filters.employmentFilter == 'In work'
                },
                {
                    value: 'Everyone',
                    text: 'Everyone',
                    selected: filters.employmentFilter == 'Everyone'
                }
            ] %}
            {{ govukSelect({
                id: "employmentFilter",
                name: "employmentFilter",
                classes: "govuk-!-width-full",
                label: {
                    text: "Showing people who are:"
                },
                items: employmentOptions
            }) }}

            {% set riskLevelOptions = [
                {
                    value: 'Any Workplace Risk Assessment',
                    text: 'Any workplace risk assessment',
                    selected: filters.riskLevelFilter == 'Any Workplace Risk Assessment'
                },
                {
                    value: 'Low',
                    text: 'Low',
                    selected: filters.riskLevelFilter == 'Low'
                },
                {
                    value: 'Low or Medium',
                    text: 'Low or Medium',
                    selected: filters.riskLevelFilter == 'Low or Medium'
                },
                {
                    value: 'Low or Medium or High',
                    text: 'Low or Medium or High',
                    selected: filters.riskLevelFilter == 'Low or Medium or High'
                },
                {
                    value: 'No Workplace Risk Assessment',
                    text: 'No Workplace Risk Assessment',
                    selected: filters.riskLevelFilter == 'No Workplace Risk Assessment'
                }
            ] %}
            {{ govukSelect({
                id: "riskLevelFilter",
                name: "riskLevelFilter",
                classes: "govuk-!-width-full",
                label: {
                    text: "Showing people whose workplace risk assessment is:"
                },
                items: riskLevelOptions
            }) }}

            {% set incentiveLevelOptions = [
                {
                    value: suitableForIep,
                    text: 'Any suitable incentive level',
                    selected: filters.incentiveLevelFilter == suitableForIep
                }
            ] %}
            {% for incentiveLevel in incentiveLevels %}
                {% set incentiveLevelOptions = (incentiveLevelOptions.push(
                    {
                        value: incentiveLevel.levelName,
                        text: incentiveLevel.levelName,
                        selected: filters.incentiveLevelFilter == incentiveLevel.levelName and incentiveLevel.levelName != suitableForIep
                    }
                ), incentiveLevelOptions) %}
            {% endfor %}
            {% set incentiveLevelOptions = (incentiveLevelOptions.push(
                {
                    value: 'All Incentive Levels',
                    text: 'All incentive levels',
                    selected: filters.incentiveLevelFilter == 'All Incentive Levels'
                }
            ), incentiveLevelOptions) %}

            {{ govukSelect({
                id: "incentiveLevelFilter",
                name: "incentiveLevelFilter",
                classes: "govuk-!-width-full",
                label: {
                    text: "Showing people who have the following incentive level:"
                },
                items: incentiveLevelOptions
            }) }}
        </div>

        {{ govukButton({
            id: 'apply-filters',
            text: "Apply filters",
            name: 'filtersApplied',
            value: 'true'
        }) }}
    </form>
</div>

{% set rows = [] %}
{% for row in pagedCandidates.content %}
    {% set currentAllocationsHtml %}
        <ul class='govuk-list'>
            {% for allocation in row.otherAllocations %}
                <li><a href='/activities/allocation-dashboard/{{ allocation.activityId }}' class='govuk-link govuk-link--no-visited-state' target='_blank'>{{ allocation.activitySummary }}</a></li>
            {% else %}
                <li>None</li>
            {% endfor %}
        </ul>
    {% endset %}
    {% set nonAssociationsLinkHtml %}
        {{ nonAssociationsHtml(row, row | formatName(NameFormatStyle.firstLast, false), activity.id) }}
    {% endset %}
    {% set rows = (rows.push({
        visuallyHiddenText: 'Select ' + row | formatName(NameFormatStyle.firstLast, false),
        value: row.prisonerNumber,
        selectable: true,
        items: [
            {
                html: showProfileLink({
                    firstName: row.firstName,
                    middleNames: row.middleNames,
                    lastName: row.lastName,
                    prisonerNumber: row.prisonerNumber,
                    cellLocation: row.cellLocation
                }),
                attributes: {
                    "data-sort-value": row | formatName(NameFormatStyle.lastCommaFirstMiddle, false)
                }
            },
            {
                html: currentAllocationsHtml
            },
            {
                html: nonAssociationsLinkHtml
            },
            {
                html: earliestReleaseDate(row.earliestReleaseDate)
            }
        ]
    }), rows) %}
{% endfor %}

<form method='POST'>
    <input type="hidden" name="_csrf" value="{{ csrfToken }}" />
    {{ stickySelect({
        idPrefix: 'candidate',
        type: 'radio',
        caption: "Candidates",
        captionClasses: "govuk-visually-hidden",
        name: 'selectedAllocation',
        head: [
            {
                text: "Candidate details"
            },
            {
                text: "Current allocations"
            },
            {
                text: 'Non-associations'
            },
            {
                text: "Earliest release date"
            }
        ],
        rows: rows,
        actions: [
            {
                text: 'Allocate',
                formAction: activity.id + '/allocate?source=Other people' +
                    (' - search' if filters.candidateQuery and not session.req.query.filtersApplied) +
                    (' - filters' if session.req.query.filtersApplied)
            }
        ],
        itemsDescription: 'person',
        itemsDescriptionPlural: 'people',
        pagination: {
            previous: {
                title: 'Previous page',
                label: pagedCandidates.number + ' of ' + pagedCandidates.totalPages,
                href: '/page/' + (pagedCandidates.number - 1) + '?id=candidates-tab'
            } if not pagedCandidates.first,
            next: {
                title: 'Next page',
                label: (pagedCandidates.number + 2) + ' of ' + pagedCandidates.totalPages,
                href: '/page/' + (pagedCandidates.number + 1) + '?id=candidates-tab'
            } if not pagedCandidates.last
        }
    }) }}
</form>
