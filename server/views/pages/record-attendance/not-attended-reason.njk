{% extends "layout.njk" %}

{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/input/macro.njk" import govukInput %}

{% set pageTitle = applicationName + " - Record attendance - Not Attended Reason" %}
{% set pageId = 'not-attended-reason-page' %}
{% set backLinkHref = "/" %}

{% macro nestedReasonData(reason, prisonerNumber, validationErrors, formResponses, sessionValues) %}
    {% if (reason.capturePay) and (not reason.captureOtherText) %}
       {{ govukRadios({
            classes: "govuk-radios--inline",
            hint: {
                text: "Should the prisoner be paid?"
            },
            name: "notAttendedData["  + prisonerNumber + "][pay]",
            errorMessage: validationErrors | findError('pay' + prisonerNumber),
            items: [
                {
                    value: true,
                    text: "Yes"
                },
                {
                    value: false,
                    text: "No"
                }
            ]
        }) }}
    {% endif %}
    {% if reason.captureMoreDetail %}
        {{ govukInput({
            label: {
                text: "Can you provide more detail? (optional)"
            },
            name: "notAttendedData["  + prisonerNumber + "][moreDetail]",
            classes: "govuk-!-width-one-half",
            errorMessage: validationErrors | findError('sickDetail' + prisonerNumber)
        }) }}
    {% endif %}
    {% if reason.captureCaseNote %}
        {{ govukInput({
            label: {
                text: "Add a case note"
            },
            name: "notAttendedData["  + prisonerNumber + "][caseNote]",
            classes: "govuk-!-width-one-half",
            errorMessage: validationErrors | findError('caseNote + prisonerNumber')
        }) }}
       {{ govukRadios({
            classes: "govuk-radios--inline",
            hint: {
                text: "Should this be recorded as an incentive level warning?"
            },
            name: "notAttendedData["  + prisonerNumber + "][incentiveLevelWarningIssued]",
            errorMessage: validationErrors | findError('pay' + prisonerNumber),
            items: [
                {
                    value: true,
                    text: "Yes"
                },
                {
                    value: false,
                    text: "No"
                }
            ]
        }) }}
    {% endif %}
    {% if reason.captureOtherText %}
        {{ govukInput({
            label: {
                text: "Add an absence reason"
            },
            name: "notAttendedData["  + prisonerNumber + "][absenceReason]",
            classes: "govuk-!-width-one-half",
            errorMessage: validationErrors | findError('absenceReason' + prisonerNumber)
        }) }}
       {{ govukRadios({
            classes: "govuk-radios--inline",
            hint: {
                text: "Was this an acceptable absence and should the prisoner be paid?"
            },
            name: "notAttendedData["  + prisonerNumber + "][pay]",
            errorMessage: validationErrors | findError('absencePay'),
            items: [
                {
                    value: true,
                    text: "Yes"
                },
                {
                    value: false,
                    text: "No"
                }
            ]
        }) }}
    {% endif %}
{% endmacro %}

{% block content %}
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <form method="POST">
                <input type="hidden" name="_csrf" value="{{ csrfToken }}" />
                {% for prisoner in selectedPrisoners %}
                    {% set notAttendedReasonOptions = [] %}
                     {% for notAttendedReason in notAttendedReasons %}
                         {% set notAttendedReasonOptions = (notAttendedReasonOptions.push(
                             {
                                 value: notAttendedReason.code,
                                 text: notAttendedReason.description,
                                 conditional: {
                                     html: nestedReasonData(notAttendedReason, prisoner.prisonerNumber, validationErrors, formResponses, session.notAttendedJourney)
                                 }
                             }
                         ), notAttendedReasonOptions) %}
                     {% endfor %}
                    {{ govukRadios({
                        fieldset: {
                            legend: {
                                text: "Select a reason why " + prisoner.prisonerName + " did not attend",
                                isPageHeading: true,
                                classes: "govuk-fieldset__legend--xl"
                            }
                        },
                        name: "notAttendedData["  + prisoner.prisonerNumber + "][notAttendedReason]",
                        errorMessage: validationErrors | findError("notAttendedData["  + prisoner.prisonerNumber + "][notAttendedReason]"),
                        items: notAttendedReasonOptions
                    }) }}
                {% endfor %}

                {{ govukButton({
                    text: "Confirm and record attendance"
                }) }}
            </form>
        </div>
    </div>
{% endblock %}
