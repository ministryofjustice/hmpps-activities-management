{% extends "layout.njk" %}

{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "components/datePicker.njk" import datePicker %}

{% set pageTitle = applicationName + " - Unlock list" %}
{% set pageId = 'select-date-and-location-page' %}
{% set backLinkHref = "/" %}

{% block content %}
    <div class="govuk-grid-row">
        <h1 class="govuk-heading-l">Choose unlock list details</h1>
        <div class="govuk-grid-column-three-quarters">
            <form method="POST">
                <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>

                {{ govukRadios({
                    name: "datePresetOption",
                    fieldset: {
                        legend: {
                            text: "Date",
                            classes: "govuk-fieldset__legend--m"
                        }
                    },
                    errorMessage: validationErrors | findError('datePresetOption'),
                    items: [
                        {
                            value: "today",
                            text: "Today",
                            checked: formResponses.datePresetOption == 'today' or datePresetOption =='today'
                        },
                        {
                            value: "yesterday",
                            text: "Yesterday",
                            checked: formResponses.datePresetOption == 'yesterday' or datePresetOption == 'yesterday'
                        },
                        {
                            value: "other",
                            text: "A different date",
                            checked: formResponses.datePresetOption == 'other' or datePresetOption == 'other',
                            conditional: { html:
                            datePicker({
                                id: 'date',
                                hint: {
                                    text: "For example, today's date is " + now | formatDate('dd MM yyyy')
                                },
                                renderedErrorMessage: validationErrors | findError('date'),
                                validationErrors: validationErrors,
                                formResponses: formResponses.date or formDate.date or simpleDate
                            })
                        }
                        }
                    ]
                }) }}

                {{ govukRadios({
                    name: "activitySlot",
                    fieldset: {
                        legend: {
                            text: "Time period",
                            classes: "govuk-fieldset__legend--m"
                        }
                    },
                    errorMessage: validationErrors | findError('activitySlot'),
                    items: [
                        {
                            value: "am",
                            text: "Morning (AM)",
                            checked: formResponses.activitySlot == 'am' or slot == 'am'
                        },
                        {
                            value: "pm",
                            text: "Afternoon (PM)",
                            checked: formResponses.activitySlot == 'pm' or slot == 'pm'
                        },
                        {
                            value: "ed",
                            text: "Evening (ED)",
                            checked: formResponses.activitySlot == 'ed' or slot == 'ed'
                        }
                    ]
                }) }}

                {% set items = [] %}
                {% for location in locationGroups %}
                    {%  set items = (items.push({
                        id: location.key,
                        value: location.key,
                        text: location.name,
                        checked: (location.key | locationChecked(formResponses.locations)) or (location.key | locationChecked(selectedLocations))
                    }), items) %}
                {% endfor %}

                {{ govukCheckboxes({
                    name: "locations[]",
                    fieldset: {
                        legend: {
                            text: "Locations",
                            classes: "govuk-fieldset__legend--m"
                        }
                    },
                    hint: {
                      text: "You can select more than one location"
                    },
                    items: items
                }) }}

                {{ govukButton({
                    text: "Continue",
                    type: "submit",
                    attributes: { 'data-qa': 'continue' }
                }) }}
            </form>
        </div>
    </div>
{% endblock %}
