{% extends "layout.njk" %}

{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from 'components/hmppsDatePicker.njk' import hmppsDatePicker %}

{% set pageTitle = applicationName + " - Unlock list" %}
{% set pageId = 'select-date-and-location-page' %}
{% set hardBackLinkText = 'Back' %}
{% set hardBackLinkHref = "/activities/unlock-list" %}

{% block content %}
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-three-quarters">
            <h1 class="govuk-heading-l">Choose unlock list details</h1>
            <form method="POST">
                <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>

                {% set otherDateHintHtml %}
                  <div class="govuk-!-margin-bottom-2">Enter the date, for example {{ exampleDatePickerDate() }}, or click on the calendar to select.</div>
                  <div>You can get unlock lists for up to 60 days from today.</div>
                {% endset %}

                {{ govukRadios({
                    name: "datePresetOption",
                    fieldset: {
                        legend: {
                            text: "Unlock date",
                            classes: "govuk-fieldset__legend--m"
                        }
                    },
                    hint: {
                        text: "You can get unlock lists for dates from up to 60 days from today"
                    },
                    errorMessage: validationErrors | findError('datePresetOption'),
                    items: [
                        {
                            value: "today",
                            text: "Today - " + now | formatDate('d MMMM yyyy', false),
                            checked: formResponses.datePresetOption == 'today'
                        },
                        {
                            value: "tomorrow",
                            text: "Tomorrow - " + now | addDays(1) | formatDate('d MMMM yyyy', false),
                            checked: formResponses.datePresetOption == 'tomorrow'
                        },
                        {
                            value: "other",
                            text: "A different date",
                            label: { text: "Unlock date "},
                            checked: formResponses.datePresetOption == 'other',
                            conditional: { html:
                              hmppsDatePicker({
                                id: 'date',
                                name: 'date',
                                label: {
                                    text: 'Other date',
                                    classes: 'govuk-visually-hidden'
                                },
                                classes: 'hmpps-datepicker--fixed-width',
                                hint: { html: otherDateHintHtml },
                                errorMessage: validationErrors | findError('date'),
                                value: formResponses.date or date
                              })
                           }
                        }
                    ]
                }) }}

                {{ govukRadios({
                    name: "activitySlot",
                    fieldset: {
                        legend: {
                            text: "Time period",
                            classes: "govuk-fieldset__legend--m"
                        }
                    },
                    errorMessage: validationErrors | findError('activitySlot'),
                    items: [
                        {
                            value: "AM",
                            text: "AM (morning)",
                            checked: formResponses.activitySlot == 'AM'
                        },
                        {
                            value: "PM",
                            text: "PM (afternoon)",
                            checked: formResponses.activitySlot == 'PM'
                        },
                        {
                            value: "ED",
                            text: "ED (evening)",
                            checked: formResponses.activitySlot == 'ED'
                        }
                    ]
                }) }}

                {% set items = [] %}
                {% for location in locationGroups %}
                    {% set items = (items.push({
                        value: location.key,
                        text: location.name,
                        checked: formResponses.location == location.key
                    }), items) %}
                {% endfor %}

                {{ govukRadios({
                    idPrefix: "locationKey",
                    name: "locationKey",
                    fieldset: {
                        legend: {
                            text: "Locations",
                            classes: "govuk-fieldset__legend--m"
                        }
                    },
                    errorMessage: validationErrors | findError('locationKey'),
                    items: items
                }) }}

                <div class="govuk-button-group">
                    {{ govukButton({
                        text: "Continue",
                        type: "submit",
                        attributes: { 'data-qa': 'view-selection' }
                    }) }}
                </div>
            </form>
        </div>
    </div>
{% endblock %}
