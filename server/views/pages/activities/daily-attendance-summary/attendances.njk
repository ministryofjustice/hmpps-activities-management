{% extends "layout.njk" %}

{% from "govuk/components/tabs/macro.njk" import govukTabs %}
{% from "moj/components/filter/macro.njk" import mojFilter %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "govuk/components/tag/macro.njk" import govukTag %}
{% from "partials/showProfileLink.njk" import showProfileLink %}
{% from "partials/attendance/attendanceTag.njk" import attendanceTag %}
{% from "partials/searchInput.njk" import searchInput %}
{% from "partials/statusBasedCellLocation.njk" import statusBasedCellLocation %}
{% from "govuk/components/button/macro.njk" import govukButton %}

{% set pageTitle = applicationName + " - Daily attendance list" %}
{% set pageId = 'daily-attendance-detail-page' %}
{% set jsBackLink = true %}

{% block content %}
    {% set filterOptionsHtml %}
        {% set categoryFilters = [] %}
        {% for category in uniqueCategories %}
            {% set categoryFilters = (categoryFilters.push({
                value: category,
                text: category,
                checked: category in session.attendanceSummaryJourney.categoryFilters
            }), categoryFilters) %}
        {% endfor %}

        {{ govukCheckboxes({
            idPrefix: 'categoryFilters',
            name: 'categoryFilters',
            classes: "govuk-radios--small",
            hint: {
                text: "Select all that apply"
            },
            fieldset: {
                legend: {
                    text: 'Categories',
                    classes: 'govuk-fieldset__legend--m'
                }
            },
            items: categoryFilters
        }) }}
        <div class="govuk-!-margin-bottom-4">
            <a href="#" class="govuk-link govuk-link--no-visited-state" data-module="select-all-link" data-checkbox-name="categoryFilters"></a>
        </div>

        <button class="govuk-button govuk-!-margin-top-3" data-module="govuk-button">
            Apply filters
        </button>
    {% endset %}
    <div class="moj-filter-layout" data-module="activities-list-filter">
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <h1 class="govuk-heading-xl govuk-!-margin-bottom-5">{{
                    ("All not attended yet" if status == 'NotAttended') +
                    ("All absences" if status == 'Absences') +
                    ("All attended" if status == 'Attended')
                }}
                <span class="govuk-caption-l">{{ activityDate | formatDate }}</span>
                </h1>

                {{ searchInput({
                    classes: "search-input--inline-search",
                    input: {
                        id: 'searchTerm',
                        name: 'searchTerm',
                        type: "search",
                        label: {
                            text: 'Search by name or prison number',
                            classes: 'govuk-label--s'
                        },
                        value: session.attendanceSummaryJourney.searchTerm,
                        attributes: {
                            form: 'filter-form'
                        }
                    },
                    button: {
                        text: "Search",
                        attributes: {
                            form: 'filter-form'
                        }
                    }
                }) }}
            </div>
            <div class="govuk-grid-column-one-third govuk-!-text-align-right">
                <div class="govuk-hint govuk-!-font-size-16">Updated at {{ now | formatDate('HH:mm') }} on {{ now | formatDate('d MMMM yyyy') }}</div>
                {{ govukButton({
                    text: "Refresh",
                    classes: "govuk-button--blue",
                    attributes: {
                        form: 'filter-form'
                    }
                }) }}
            </div>
        </div>

        <form id="filter-form" method="POST" action="update-filters" novalidate>
            <input type="hidden" name="_csrf" value="{{ csrfToken }}" />
            <div class="moj-filter-layout__filter">
                {{ mojFilter({
                    heading: {
                        text: 'Filter'
                    },
                    optionsHtml: filterOptionsHtml
                }) }}
            </div>

            <div class="moj-filter-layout__content">
                <div class="moj-action-bar">
                    <div class="moj-action-bar__filter moj-action-bar__filter--no-actions"></div>
                </div>
                {{ govukTabs({
                    classes: "govuk-tabs--borderless",
                    items: [
                        {
                            label: "Daily summary",
                            id: "day-tab",
                            panel: {
                                html: summaryHtml("DAY", "daily", activityDate, user)
                            }
                        },
                        {
                            label: "AM session",
                            id: "am-tab",
                            panel: {
                                html: summaryHtml("AM", "morning", activityDate, user)
                            }
                        },
                        {
                            label: "PM session",
                            id: "pm-tab",
                            panel: {
                                html: summaryHtml("PM", "afternoon", activityDate, user)
                            }
                        },
                        {
                            label: "ED session",
                            id: "ed-tab",
                            panel: {
                                html: summaryHtml("ED", "evening", activityDate, user)
                            }
                        }
                    ]
                }) }}
            </div>
        </form>
    </div>
{% endblock %}

{% macro summaryHtml(timeSlot, timeSlotDescription, activityDate, user) %}
    {% set attendanceRows = [] %}
    {% for attendee in attendees %}
        {% if timeSlot === 'DAY' or timeSlot === attendee.attendance.timeSlot %}
            {% set attendanceRows = (attendanceRows.push([
                {
                    attributes: { id: 'activity-' + loop.index, "data-sort-value": attendee.name | prisonerNameForSorting },
                    html: showProfileLink({
                        name: attendee.name,
                        prisonerNumber: attendee.prisonerNumber,
                        inCaseLoad: attendee.prisonCode == user.activeCaseLoadId,
                        classes: 'hmpps-inline-block'
                    }),
                    classes: 'govuk-table_cell'
                },
                {
                    attributes: { id: 'cell-location-' + loop.index, "data-sort-value": attendee.location },
                    html: statusBasedCellLocation(attendee.location, attendee.status, attendee.prisonCode == user.activeCaseLoadId),
                    classes: 'govuk-table_cell'
                },
                {
                    attributes: { id: 'activity-' + loop.index, "data-sort-value": attendee.attendance.activitySummary },
                    html: '<a href="/activities/attendance/activities/' + attendee.attendance.scheduledInstanceId + '/attendance-list" class="govuk-link govuk-link--no-visited-state" target="_blank">' + (attendee.attendance.activitySummary | escape) + '</a>',
                    classes: 'govuk-table__cell'
                },
                {
                    attributes: { id: 'recorded-time-' + loop.index, "data-sort-value": attendee.location },
                    text: attendee.attendance.recordedTime | parseDate("yyyy-MM-dd'T'HH:mm:ss") | formatDate('HH:mm:ss') + ' on ' + attendee.attendance.recordedTime | parseDate("yyyy-MM-dd'T'HH:mm:ss") | formatDate('d MMM yyyy'),
                    classes: 'govuk-table_cell'
                } if status != "NotAttended",
                {
                    html: attendanceTag(attendee.attendance.status, attendee.attendance.attendanceReasonCode) + ' ' + renderPayStatus(attendee.attendance),
                    attributes: {
                        "data-qa": "attendance"
                    }
                },
                {
                    html: '<a href="/activities/attendance/activities/' + attendee.attendance.scheduledInstanceId + '/attendance-details/' + attendee.attendance.attendanceId + '" class="govuk-link govuk-link--no-visited-state">' + 'View or edit</a>'
                } if status != "NotAttended"
            ] | removeUndefined), attendanceRows) %}
        {% endif %}
    {% endfor %}

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-three-quarters">
            {% if status == 'Attended' %}
                <h2 class="govuk-heading-m">{{ attendanceRows | length }} attended</h2>
            {% elseif status == 'NotAttended' %}
                <h2 class="govuk-heading-m">{{ attendanceRows | length }} not attended yet</h2>
            {% elseif status == 'Absences' %}
                <h2 class="govuk-heading-m">{{ attendanceRows | length }} absence{% if attendanceRows | length != 1 %}s{% endif %}</h2>
            {% endif %}
        </div>
    </div>

    {{ govukTable({
        attributes: {
            'data-module': 'moj-sortable-table',
            id: 'attendee-list-table'
        },
        classes: "alternating-row-shading fixed-layout-table",
        captionClasses: "govuk-visually-hidden",
        head: [
            {
                text: "Attendee",
                attributes: { "aria-sort": "none" }
            },
            {
                text: "Cell location",
                attributes: { "aria-sort": "none" }
            },
            {
                html: "Session",
                attributes: { "aria-sort": "ascending" }
            },
            {
                html: "Time recorded",
                attributes: { "aria-sort": "none" }
            }  if status != "NotAttended",
            {
                text: "Attendance details",
                attributes: { "aria-sort": "none" }
            },
            {
                text: ""
            } if status != "NotAttended"
        ] | removeUndefined,
        rows: attendanceRows
    }) }}
{% endmacro %}

{% macro renderPayStatus(attendance) %}
    {% if attendance.issuePayment %}
        {{ govukTag({
            text: "Pay",
            classes: "govuk-tag--green"
        }) }}
    {% elseif attendance.status !=  'WAITING' %}
        {{ govukTag({
            text: "No pay",
            classes: "govuk-tag--red"
        }) }}
    {% endif %}
{% endmacro %}
