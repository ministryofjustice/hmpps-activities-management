{% extends "layout.njk" %}

{% from "components/searchBar.njk" import searchBar %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/tag/macro.njk" import govukTag %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/warning-text/macro.njk" import govukWarningText %}
{% from "moj/components/filter/macro.njk" import mojFilter %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "partials/attendance/activitiesTable.njk" import activitiesTable %}
{% from "partials/showLocation.njk" import showLocation %}

{% set pageTitle = applicationName + " - Record attendance" %}
{% set pageId = 'activities-page' %}
{% set hardBackLinkHref = "/activities/attendance/select-period?date="+(activityDate | toDateString or '')+"&sessions="+(session.req.query.sessionFilters or '') %}
{% set hardBackLinkText = "Back" %}

{% set filterParams = (('&searchTerm=' + session.req.query.searchTerm) if session.req.query.searchTerm else '') +
    (('&sessionFilters=' + session.req.query.sessionFilters) if session.req.query.sessionFilters else '') +
    (('&categoryFilters=' + session.req.query.categoryFilters) if session.req.query.categoryFilters else '') +
    (('&locationId=' + session.req.query.locationId) if session.req.query.locationId else '') +
    (('&locationType=' + session.req.query.locationType) if session.req.query.locationType else '') %}

{% block meta %}
        <meta name="autocompleteElements" content="locationId"/>
{% endblock %}

{% block content %}
    <form id="filter-form" method="POST" novalidate>
        <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>
        <input type="hidden" name="activityDate" value="{{ activityDate | formatDate('yyyy-MM-dd') }}">

        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <span class="govuk-caption-l">Record activity attendance</span>
                <h1 class="govuk-heading-l govuk-!-margin-bottom-0">Find an activity to record or edit attendance</h1>
                <span class="govuk-caption-m govuk-!-margin-bottom-4">
                    {{ activityDate | formatDate }}
                    {% set comma = joiner(', ') %}
                    {%- for session in selectedSessions -%}
                        {{  ' - ' if loop.first and session }}
                        {{- ' and ' if loop.last and not loop.first else comma() }}{{ session }}
                    {%- endfor -%}
                </span>
                <ul class="govuk-list govuk-!-margin-bottom-4">
                    <li><a href="select-period" class="govuk-link govuk-!-font-size-19">View a different day or time period</a></li>
                    <li><a href="/activities/attendance-summary/summary?date={{ activityDate | toDateString }}{{ filterParams }}" class="govuk-link govuk-!-font-size-19">Go to daily attendance summary</a></li>
                </ul>

                {{ searchBar({
                    inputParams: {
                        id: 'searchTerm',
                        name: 'searchTerm',
                        label: {
                            text: 'Search by activity name',
                            classes: 'govuk-label--s'
                        },
                        type: 'search',
                        value: session.req.query.searchTerm
                    },
                    buttonParams: {
                        text: 'Search'
                    }
                }) }}
            </div>
        </div>

        {% set filterOptionsHtml %}

        {% set locationOptions = [{ value: '-', text: '' }] %}
        {% for location in locations %}
            {% set options = (locationOptions.push( { value: location.locationId, text: location.userDescription }), locationOptions) %}
        {% endfor %}

        {{ govukRadios({
            id: "location-type",
            name: "locationType",
            classes: "govuk-radios--small",
            fieldset: {
                legend: {
                    text: 'Location',
                    classes: 'govuk-fieldset__legend--m'
                }
            },
            items: [
                {
                    value: "ALL",
                    text: "All locations",
                    checked: filterItems.locationType == 'ALL'
                },
                {
                    value: LocationType.OUT_OF_CELL,
                    text: "Search for a location",
                    checked: filterItems.locationType == LocationType.OUT_OF_CELL,
                    conditional: {
                        html: govukSelect({
                            id: "locationId",
                            name: "locationId",
                            label: {
                                text: "Start typing a location and select from the list."
                            },
                            errorMessage: validationErrors | findError('locationId'),
                            value: filterItems.locationId,
                            items: locationOptions
                        })
                    }
                },
                {
                    value: LocationType.IN_CELL,
                    text: "In cell",
                    checked: filterItems.locationType == LocationType.IN_CELL
                },
                {
                    value: LocationType.OFF_WING,
                    text: "Off wing - not listed",
                    checked: filterItems.locationType == LocationType.OFF_WING
                },
                {
                    value: LocationType.ON_WING,
                    text: "On wing - not listed",
                    checked: filterItems.locationType == LocationType.ON_WING
                }
            ]
        }) }}

        {{ govukCheckboxes({
                idPrefix: 'sessionFilters',
                name: 'sessionFilters',
                classes: "govuk-checkboxes--small",
                fieldset: {
                    legend: {
                        text: 'Session',
                        classes: 'govuk-fieldset__legend--m'
                    }
                },
                items: filterItems.sessionFilters
            }) }}

        {{ govukCheckboxes({
                idPrefix: 'categoryFilters',
                name: 'categoryFilters',
                classes: "govuk-checkboxes--small",
                fieldset: {
                    legend: {
                        text: 'Categories',
                        classes: 'govuk-fieldset__legend--m'
                    }
                },
                formGroup: {
                    classes: 'govuk-!-margin-bottom-0'
                },
                items: filterItems.categoryFilters
            }) }}
        <div class="govuk-!-margin-bottom-4">
            <a href="#" class="govuk-link govuk-link--no-visited-state" data-module="select-all-link" data-checkbox-name="categoryFilters"></a>
        </div>

        {{ govukButton({
            text: 'Apply filters'
        }) }}

        {% endset %}

        <div class="attendance-activities">
            <div class="moj-filter-layout moj-filter-layout__flex" data-module="activities-list-filter" data-filter-start-shown="true">
                <div class="moj-filter-layout__filter moj-filter-layout__flex govuk-!-display-none-print">
                    {{ mojFilter({
                        heading: {
                            text: 'Filters'
                        },
                        optionsHtml: filterOptionsHtml
                    }) }}
                </div>
                <hr class="print-only"/>
                <div class="moj-filter-layout__content">
                    <div class="moj-action-bar govuk-!-display-none-print">
                        <div class="moj-action-bar__filter"></div>
                    </div>

                    {{ activitiesTable(activityRows, activityDate, filterParams, now) }}

                    {% if activitiesBySession['AM'].length == 0 and activitiesBySession['PM'].length == 0 and activitiesBySession['ED'].length == 0 %}
                        {{ govukWarningText({
                            text: "There are no matching activities.",
                            iconFallbackText: "Warning"
                        }) }}
                    {% endif %}

                </div>
            </div>
        </div>
    </form>
{% endblock %}
