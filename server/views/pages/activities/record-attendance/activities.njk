{% extends "layout.njk" %}

{% from "components/searchBar.njk" import searchBar %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/tag/macro.njk" import govukTag %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/warning-text/macro.njk" import govukWarningText %}
{% from "moj/components/filter/macro.njk" import mojFilter %}


{% set pageTitle = applicationName + " - Record attendance" %}
{% set pageId = 'activities-page' %}
{% set jsBackLink = true %}

{% set filterParams = (('&searchTerm=' + session.req.query.searchTerm) if session.req.query.searchTerm else '') +
    (('&sessionFilters=' + session.req.query.sessionFilters) if session.req.query.sessionFilters else '') +
    (('&categoryFilters=' + session.req.query.categoryFilters) if session.req.query.categoryFilters else '') +
    (('&locationFilters=' + session.req.query.locationFilters) if session.req.query.locationFilters else '') %}

{% block content %}
    <form id="filter-form" method="POST" novalidate>
        <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>
        <input type="hidden" name="activityDate" value="{{ activityDate | formatDate('yyyy-MM-dd') }}">

        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <h1 class="govuk-heading-l govuk-!-margin-bottom-0">Find an activity to record or edit attendance</h1>
                <span class="govuk-caption-m govuk-!-margin-bottom-4">
                    {{ activityDate | formatDate }}
                    {%  if recordAttendanceSelectSlotFirst %}
                        {% set comma = joiner(', ') %}
                        {%- for session in selectedSessions -%}
                            {{  ' - ' if loop.first and session }}
                            {{ ' and ' if loop.last and not loop.first else comma() }}{{ session | upper }}
                        {%- endfor -%}
                    {% endif %}
                </span>
                <ul class="govuk-list govuk-!-margin-bottom-4">
                    {% if not recordAttendanceSelectSlotFirst and now | toDateString != activityDate | toDateString %}
                        <li><a href="?date={{ now | toDateString }}{{ filterParams }}" class="govuk-link govuk-!-font-size-19">View the schedule for today</a></li>
                    {% endif %}
                    <li><a href="select-period" class="govuk-link govuk-!-font-size-19">View a different day or time period</a></li>
                    <li><a href="/activities/attendance-summary/summary?date={{ activityDate | toDateString }}{{ filterParams }}" class="govuk-link govuk-!-font-size-19">Go to daily attendance summary</a></li>
                </ul>

                {{ searchBar({
                    inputParams: {
                        id: 'searchTerm',
                        name: 'searchTerm',
                        label: {
                            text: 'Search by activity name',
                            classes: 'govuk-label--s'
                        },
                        type: 'search',
                        value: session.req.query.searchTerm
                    },
                    buttonParams: {
                        text: 'Search'
                    }
                }) }}
            </div>
        </div>

        {% set filterOptionsHtml %}
        {{ govukCheckboxes({
                idPrefix: 'sessionFilters',
                name: 'sessionFilters',
                classes: "govuk-checkboxes--small",
                fieldset: {
                    legend: {
                        text: 'Session',
                        classes: 'govuk-fieldset__legend--m'
                    }
                },
                items: filterItems.sessionFilters
            }) }}
        {{ govukCheckboxes({
                idPrefix: 'categoryFilters',
                name: 'categoryFilters',
                classes: "govuk-checkboxes--small",
                fieldset: {
                    legend: {
                        text: 'Categories',
                        classes: 'govuk-fieldset__legend--m'
                    }
                },
                formGroup: {
                    classes: 'govuk-!-margin-bottom-0'
                },
                items: filterItems.categoryFilters
            }) }}
        <div class="govuk-!-margin-bottom-4">
            <a href="#" class="govuk-link govuk-link--no-visited-state" data-module="select-all-link" data-checkbox-name="categoryFilters"></a>
        </div>
        {{ govukCheckboxes({
                idPrefix: 'locationFilters',
                name: 'locationFilters',
                classes: "govuk-checkboxes--small",
                formGroup: {
                    classes: "govuk-!-margin-bottom-4"
                },
                fieldset: {
                    legend: {
                        text: 'Locations',
                        classes: 'govuk-fieldset__legend--m'
                    }
                },
                items: filterItems.locationFilters
            }) }}
        {{ govukButton({
            text: 'Apply filters'
        }) }}
        {% endset %}

        <div class="moj-filter-layout" data-module="activities-list-filter">
            <div class="moj-filter-layout__filter govuk-!-display-none-print">
                {{ mojFilter({
                    heading: {
                        text: 'Filter'
                    },
                    optionsHtml: filterOptionsHtml
                }) }}
            </div>
            <hr class="print-only"/>
            <div class="moj-filter-layout__content">
                <div class="moj-action-bar govuk-!-display-none-print">
                    <div class="moj-action-bar__filter"></div>
                </div>

                {{ scheduledActivitiesTable('Morning sessions', activitiesBySession, 'am') }}
                {{ scheduledActivitiesTable('Afternoon sessions', activitiesBySession, 'pm') }}
                {{ scheduledActivitiesTable('Evening sessions', activitiesBySession, 'ed') }}

                {% if activitiesBySession['am'].length == 0 and activitiesBySession['pm'].length == 0 and activitiesBySession['ed'].length == 0 %}
                    {{ govukWarningText({
                        text: "There are no matching activities.",
                        iconFallbackText: "Warning"
                    }) }}
                {% endif %}

                <nav class="govuk-pagination govuk-pagination--block" role="navigation" aria-label="results">
                    <div class="govuk-pagination__prev">
                        <a class="govuk-link govuk-pagination__link" href="activities?date={{ activityDate | addDays(-1) | formatDate('yyyy-MM-dd') }}{{ filterParams }}" rel="prev">
                            <svg class="govuk-pagination__icon govuk-pagination__icon--prev" xmlns="http://www.w3.org/2000/svg" height="13" width="15" aria-hidden="true" focusable="false" viewBox="0 0 15 13">
                                <path d="m6.5938-0.0078125-6.7266 6.7266 6.7441 6.4062 1.377-1.449-4.1856-3.9768h12.896v-2h-12.984l4.2931-4.293-1.414-1.414z"></path>
                            </svg>
                            <span class="govuk-pagination__link-title">Previous day</span><span class="govuk-visually-hidden">:</span>
                            <span class="govuk-pagination__link-label">{{ activityDate | addDays(-1) | formatDate }}</span>
                        </a>
                    </div>
                    {% if activityDate < now | startOfDay | addDays(60) %}
                        <div class="govuk-pagination__next">
                            <a class="govuk-link govuk-pagination__link" href="activities?date={{ activityDate | addDays(1) | formatDate('yyyy-MM-dd') }}{{ filterParams }}" rel="next">
                                <svg class="govuk-pagination__icon govuk-pagination__icon--next" xmlns="http://www.w3.org/2000/svg" height="13" width="15" aria-hidden="true" focusable="false" viewBox="0 0 15 13">
                                    <path d="m8.107-0.0078125-1.4136 1.414 4.2926 4.293h-12.986v2h12.896l-4.1855 3.9766 1.377 1.4492 6.7441-6.4062-6.7246-6.7266z"></path>
                                </svg>
                                <span class="govuk-pagination__link-title">Next day</span><span class="govuk-visually-hidden">:</span>
                                <span class="govuk-pagination__link-label">{{ activityDate | addDays(1) | formatDate }}</span>
                            </a>
                        </div>
                    {% endif %}
                </nav>
            </div>
        </div>
    </form>
{% endblock %}

{% macro scheduledActivitiesTable(caption, activities, session) %}
    {% if activities[session].length %}
        {% set rows = [] %}
        {% for activity in activities[session] %}
            {% set activityLocation = ("In cell" if activity.inCell) or ("On wing" if activity.onWing) or ("Off wing" if activity.offWing) or activity.internalLocation.description | capitalize %}
            {% set rows = (rows.push([
                {
                    attributes: {
                        id: 'activity-' + session + '-' + loop.index,
                        "data-sort-value": activity.summary
                    },
                    html: '
                            <p class="govuk-heading-s govuk-!-margin-bottom-0">
                                <a href="activities/' + activity.scheduledInstanceId + '/attendance-list" class="govuk-link govuk-link--no-visited-state" target="_blank">' + (activity.summary | escape) + '<span class="govuk-visually-hidden"> (opens in new tab)</span></a>
                            </p>
                            <div>' + activityCancelledTag(activity.cancelled) + '</div>'
                },
                {
                    attributes: {
                        id: 'location-' + session + '-' + loop.index,
                        "data-sort-value": activityLocation
                    },
                    text: activityLocation
                },
                {
                    attributes: {
                        id: 'time-' + session + '-' + loop.index,
                        "data-sort-value": activity.startTime
                    },
                    text: activity.startTime
                },
                {
                    attributes: {
                        id: 'scheduled-' + session + '-'  + loop.index,
                        "data-sort-value": activity.attendanceSummary.allocations
                    },
                    classes: 'govuk-table__cell--numeric',
                    text: activity.attendanceSummary.allocations
                },
                {
                    attributes: {
                        id: 'attended-' + session + '-' + loop.index,
                        "data-sort-value": activity.attendanceSummary.attended or 0
                    },
                    classes: 'govuk-table__cell--numeric',
                    text: attendanceStat(activity.attendanceSummary.attended, activity.attendanceRequired)
                },
                {
                    attributes: {
                        id: 'notRecorded-' + session + '-' + loop.index,
                        "data-sort-value": activity.attendanceSummary.notRecorded or 0
                    },
                    classes: 'govuk-table__cell--numeric',
                    text: attendanceStat(activity.attendanceSummary.notRecorded, activity.attendanceRequired)
                },
                {
                    attributes: {
                        id: 'notAttended-' + session + '-' + loop.index,
                        "data-sort-value": activity.attendanceSummary.absences or 0
                    },
                    classes: 'govuk-table__cell--numeric',
                    text: attendanceStat(activity.attendanceSummary.absences, activity.attendanceRequired)
                }
            ]), rows) %}
        {% endfor %}

        {{ govukTable({
            attributes: {
                'data-module': 'moj-sortable-table',
                'data-qa': 'table-session-' + session
            },
            caption: caption + " (" + rows.length + ")",
            head: [
                {
                    text: "Activity",
                    attributes: {
                        "aria-sort": "ascending"
                    },
                    classes: 'govuk-!-width-one-quarter'
                },
                {
                    text: "Location",
                    attributes: {
                        "aria-sort": "none"
                    },
                    classes: 'govuk-!-width-one-quarter'
                },
                {
                    text: "Time",
                    attributes: {
                        "aria-sort": "none"
                    }
                },
                {
                    text: "Allocated",
                    classes: 'govuk-table__header--numeric',
                    attributes: {
                        "aria-sort": "none"
                    }
                },
                {
                    text: "Attended",
                    classes: 'govuk-table__header--numeric',
                    attributes: {
                        "aria-sort": "none"
                    }
                },
                {
                    text: "Not recorded",
                    classes: 'govuk-table__header--numeric',
                    attributes: {
                        "aria-sort": "none"
                    }
                },
                {
                    text: "All absences",
                    classes: 'govuk-table__header--numeric',
                    attributes: {
                        "aria-sort": "none"
                    }
                }
            ],
            rows: rows
        }) }}
    {% endif %}
{% endmacro %}

{% macro activityCancelledTag(cancelled) %}
    {% if cancelled %}
        {{ govukTag({
            text: "Cancelled",
            classes: "govuk-tag--red"
        }) }}
    {% endif %}
{% endmacro %}

{% macro attendanceStat(stat, attendanceRequired=true) %}
    {{ stat if stat !== null and attendanceRequired === true else '-' }}
{% endmacro %}
