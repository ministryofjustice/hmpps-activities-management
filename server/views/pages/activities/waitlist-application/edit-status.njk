{% extends "layout.njk" %}

{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/character-count/macro.njk" import govukCharacterCount %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "partials/activities/waitlist-status-badge.njk" import waitlistStatusBadge %}

{% set pageTitle = applicationName + " - Waitlist - Status" %}
{% set pageId = 'status-page' %}
{% set jsBackLink = true %}

{% block content %}
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <span class="govuk-caption-xl">{{ session.waitListApplicationJourney.activity.activityName }}</span>
        </div>
    </div>
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <form method="POST">
                <input type="hidden" name="_csrf" value="{{ csrfToken }}" />

                {{ govukRadios({
                    name: "status",
                    fieldset: {
                        legend: {
                            text: "Change the status of " + session.waitListApplicationJourney.prisoner.name + "'s application",
                            isPageHeading: true,
                            classes: "govuk-fieldset__legend--xl"
                        }
                    },
                    hint: {
                        html: '
                                <p>If you decline the application, make sure you tell the person concerned.</p>
                                <div>Select one option</div>
                              '
                    },
                    errorMessage: validationErrors | findError('status'),
                    items: [
                        {
                            value: WaitingListStatusOptions.APPROVED,
                            html: waitlistStatusBadgeWithHint(WaitingListStatusOptions.APPROVED, 'Add the applicant to the waitlist. They’re ready to be allocated.'),
                            checked: session.waitListApplicationJourney.status == WaitingListStatusOptions.APPROVED
                        },
                        {
                            value: WaitingListStatusOptions.DECLINED,
                            html: waitlistStatusBadgeWithHint(WaitingListStatusOptions.DECLINED, 'Reject the application and inform the person concerned.'),
                            checked: session.waitListApplicationJourney.status == WaitingListStatusOptions.DECLINED
                        },
                        {
                            divider: "or"
                        },
                        {
                            value: WaitingListStatusOptions.PENDING,
                            html: waitlistStatusBadgeWithHint(WaitingListStatusOptions.PENDING, 'Add the applicant to the waitlist as ‘Pending’. Follow your usual procedure to check if they can be allocated.'),
                            checked: session.waitListApplicationJourney.status == WaitingListStatusOptions.PENDING
                        }
                    ]
                }) }}

                <div class="govuk-button-group">
                    {{ govukButton({
                        text: "Update application status",
                        preventDoubleClick: true
                    }) }}
                </div>
            </form>
        </div>
    </div>
{% endblock %}

{% macro waitlistStatusBadgeWithHint(status, hint) %}
    {{ waitlistStatusBadge(status) }}
    <div class='govuk-hint'>{{ hint }}</div>
{% endmacro %}
