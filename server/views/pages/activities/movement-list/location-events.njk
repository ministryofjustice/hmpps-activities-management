{% extends "layout.njk" %}

{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/tag/macro.njk" import govukTag %}
{% from "moj/components/filter/macro.njk" import mojFilter %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "components/alertsList.njk" import alertsList %}
{% from "components/alertFilters.njk" import alertFilters %}
{% from "partials/showProfileLink.njk" import showProfileLink %}
{% from "partials/statusBasedCellLocation.njk" import statusBasedCellLocation %}

{% set pageTitle = (locations[0].description + " - movement list - Activities - DPS" if locations | length == 1 else "Movement lists for " + locations | length + " locations - Activities - DPS") %}
{% set pageId = 'movement-list-location-events-page' %}
{% set hardBackLinkText = 'Back' %}
{% set hardBackLinkHref = "locations?dateOption=" + movementListJourney.dateOption + "&date=" + movementListJourney.date + "&timeSlot=" + movementListJourney.timeSlot %}

{% macro showEvents(events, location) %}
    {% if events | length == 0 %}
        <span>None</span>
    {% else %}
        <div>
            {% for event in events %}
                {% if not loop.first %}<hr class="dashed-mid-grey-tint-20-hr" />{% endif %}

                {% if event.eventType == EventType.ACTIVITY and event.eventSource =='SAA' %}
                    <div>
                        <a href="/activities/attendance/activities/{{ event.scheduledInstanceId }}/attendance-list"
                           class="govuk-link govuk-link--no-visited-state" target="_blank">
                            {{ event.summary | trim }}
                        </a>
                    </div>
                {% elseif event.eventType == EventType.APPOINTMENT and event.eventSource =='SAA' %}
                    <div>
                        <a href="/appointments/{{ event.appointmentId }}"
                           class="govuk-link govuk-link--no-visited-state" target="_blank">
                            {{ event.summary | trim }}
                        </a>
                    </div>
                    <div class='govuk-!-margin-top-1 govuk-!-margin-bottom-1'>{{ govukTag({ text: 'Appointment', classes: 'govuk-tag--small' }) }}</div>
                    {% if event.comments %}
                        <div class='govuk-!-margin-top-1 govuk-!-margin-bottom-1'>{{ govukTag({ text: 'Extra information', classes: 'govuk-tag--small govuk-tag--yellow govuk-!-display-none-print' }) }}</div>
                    {% endif %}
                {% else %}
                    <div class='govuk-!-margin-top-1 govuk-!-margin-bottom-1'>{{ event.summary | trim }}</div>
                {% endif %}

                {% if event.cancelled %}
                    <div class='govuk-!-margin-top-1 govuk-!-margin-bottom-1'>{{ govukTag({ text: 'Cancelled', classes: 'govuk-tag--small govuk-tag--red' }) }}</div>
                {% endif %}

                {% if event.suspended %}
                    <div class='govuk-!-margin-top-1 govuk-!-margin-bottom-1'>{{ govukTag({ text: 'Prisoner suspended', classes: 'govuk-tag--red govuk-tag--small' }) }}</div>
                {% endif %}

                {% if event.autoSuspended %}
                    <div class='govuk-!-margin-top-1 govuk-!-margin-bottom-1'>{{ govukTag({ text: 'Temporarily absent', classes: 'govuk-tag--red govuk-tag--small' }) }}</div>
                {% endif %}

                {% if event.eventType != EventType.EXTERNAL_TRANSFER and event.eventType != EventType.COURT_HEARING %}
                    <div class="movement-list__location-events__secondary-information govuk-body-s govuk-!-margin-bottom-0">{{ event.startTime }}{% if event.endTime %} - {{ event.endTime }}{% endif %}</div>

                    {% if event.internalLocationId != location.id %}
                        <div class="movement-list__location-events__secondary-information govuk-body-s govuk-!-margin-0">{{ event.internalLocationUserDescription or event.internalLocationDescription }}</div>
                    {% endif %}
                {% endif %}
            {% endfor %}
        </div>
    {% endif %}
{% endmacro %}

{% macro showEventDetails(event, location) %}
    {% if event %}
        <div>
            {% if event.eventType == EventType.ACTIVITY and event.eventSource =='SAA' %}
                <div>
                    <a href="/activities/attendance/activities/{{ event.scheduledInstanceId }}/attendance-list"
                        class="govuk-link govuk-link--no-visited-state" target="_blank">
                        {{ event.summary | trim }}
                    </a>
                </div>
            {% elseif event.eventType == EventType.APPOINTMENT and event.eventSource =='SAA' %}
                <div>
                    <a href="/appointments/{{ event.appointmentId }}"
                        class="govuk-link govuk-link--no-visited-state" target="_blank">
                        {{ event.summary | trim }}
                    </a>
                </div>
                <div class='govuk-!-margin-top-1 govuk-!-margin-bottom-1'>{{ govukTag({ text: 'Appointment', classes: 'govuk-tag--small' }) }}</div>
                {% if event.comments %}
                    <div class='govuk-!-margin-top-1 govuk-!-margin-bottom-1'>{{ govukTag({ text: 'Extra information', classes: 'govuk-tag--small govuk-tag--yellow govuk-!-display-none-print' }) }}</div>
                {% endif %}
            {% else %}
                <div class='govuk-!-margin-top-1 govuk-!-margin-bottom-1'>{{ event.summary | trim }}</div>
            {% endif %}

            {% if event.cancelled %}
                <div class='govuk-!-margin-top-1 govuk-!-margin-bottom-1'>{{ govukTag({ text: 'Cancelled', classes: 'govuk-tag--small govuk-tag--red' }) }}</div>
            {% endif %}

            {% if event.suspended %}
                <div class='govuk-!-margin-top-1 govuk-!-margin-bottom-1'>{{ govukTag({ text: 'Prisoner suspended', classes: 'govuk-tag--red govuk-tag--small' }) }}</div>
            {% endif %}

            {% if event.autoSuspended %}
                <div class='govuk-!-margin-top-1 govuk-!-margin-bottom-1'>{{ govukTag({ text: 'Temporarily absent', classes: 'govuk-tag--red govuk-tag--small' }) }}</div>
            {% endif %}

            {% if event.eventType != EventType.EXTERNAL_TRANSFER and event.eventType != EventType.COURT_HEARING %}
                <div class="movement-list__location-events__secondary-information govuk-body-s govuk-!-margin-0">{{ event.internalLocationUserDescription or event.internalLocationDescription }}</div>
            {% endif %}
        </div>
    {% endif %}
{% endmacro %}

{% macro showEventTime(event) %}
    {% if event.eventType != EventType.EXTERNAL_TRANSFER and event.eventType != EventType.COURT_HEARING %}
       {{ event.startTime }}{% if event.endTime %} - {{ event.endTime }}{% endif %}
    {% endif %}
{% endmacro %}

{% block content %}

    {% set filterOptionsHtml %}

        {{ alertFilters(alertOptions, movementListJourney.alertFilters) }}

        <button class="govuk-button govuk-!-margin-top-3" data-module="govuk-button">
            Apply filters
        </button>
    {% endset %}

    <div class="moj-filter-layout moj-filter-layout__flex govuk-!-margin-0 unlock-list" data-module="activities-list-filter">
            <div class="moj-filter-layout__filter moj-filter-layout__flex govuk-!-display-none-print">
        <form id="filter-form" method="POST" action="update-filters" novalidate>
            <input type="hidden" name="_csrf" value="{{ csrfToken }}" />
                {{ mojFilter({
                    heading: {
                        text: 'Filters'
                    },
                    optionsHtml: filterOptionsHtml
                }) }}
                </form>
            </div>
            <div class="moj-filter-layout__content">
                {% if locations | length > 1 %}
                    <div class="moj-action-bar govuk-!-display-none-print">
                        <div class="moj-action-bar__filter"></div>
                      {{ govukButton({
                        attributes: { id: 'print-movement-lists' },
                        text: "Print these movement lists",
                        classes: "govuk-button--blue js-print no-js-hidden",
                        preventDoubleClick: true
                      }) }}
                    </div>
                {% endif %}

                {% for location in locations %}
                    {% set locationIndex = loop.index %}
                    {% set prisonerEventsTableRows = [] %}
                    {% for prisonerEvents in location.prisonerEvents %}
                        {% for event in prisonerEvents.events %}
                            {% set row = [] %}
                            {% set row = row.concat(
                                {
                                    html: '<span class="print-checkbox"></span>',
                                    classes: 'print-only'
                                }, {
                                    html: showProfileLink({
                                        firstName: prisonerEvents.firstName,
                                        middleNames: prisonerEvents.middleNames,
                                        lastName: prisonerEvents.lastName,
                                        prisonerNumber: prisonerEvents.prisonerNumber,
                                        inCaseLoad: prisonerEvents.prisonId == user.activeCaseLoadId
                                    }),
                                    attributes: { 'data-qa': 'location-' + locationIndex + '-prisoner-' + loop.index + '-name-and-number', "data-sort-value": prisonerEvents | formatName(NameFormatStyle.lastCommaFirstMiddle, false) }
                                }, {
                                    text: statusBasedCellLocation(prisonerEvents.cellLocation, prisonerEvents.status, prisonerEvents.prisonId == user.activeCaseLoadId),
                                    attributes: { 'data-qa': 'location-' + locationIndex + '-prisoner-' + loop.index + '-cell-location' }
                                }
                            ) %}

                            {% if movementListJourney.alertFilters | length %}
                                {% set row = row.concat(
                                    {
                                        html: alertsList({ alerts: prisonerEvents.alerts, category: prisonerEvents.category }),
                                        attributes: { 'data-qa': 'location-' + locationIndex + '-prisoner-' + loop.index + '-alerts' }
                                    }
                                ) %}
                            {% endif %}

                            {% set row = row.concat(
                                {
                                    html: showEventDetails(event, location),
                                    attributes: {
                                        'data-qa': 'location-' + locationIndex + '-prisoner-' + loop.index + '-events',
                                        'data-sort-value': prisonerEvents.events[0].summary
                                    }
                                },
                                {
                                    html: showEventTime(event),
                                    attributes: {
                                        'data-qa': 'location-' + locationIndex + '-prisoner-' + loop.index + '-activity-time',
                                        'data-sort-value': event.startTime
                                    }
                                },
                                {
                                    html: showEvents(prisonerEvents.clashingEvents, location),
                                    attributes: {
                                        'data-qa': 'location-' + locationIndex + '-prisoner-' + loop.index + '-clashing-events'
                                    }
                                }
                            ) %}

                            {% set prisonerEventsTableRows = (prisonerEventsTableRows.push(row), prisonerEventsTableRows) %}
                        {% endfor %}
                    {% endfor %}

                    <div class="movement-list{{ " print-page-break" if not loop.first }}">
                        <div class="govuk-grid-row movement-list__location">
                            <div class="govuk-grid-column-two-thirds">
                                <h1 class="govuk-heading-l govuk-!-margin-0">{{ location.description }} - movement list</h1>
                                <span class="govuk-caption-l" data-qa="time-slot-caption">{{ timeSlot }} session</span>
                                <span class="govuk-caption-l" data-qa="date-caption">{{ date | toDate | formatDate }}</span>
                            </div>
                        </div>

                        <div class="govuk-grid-row movement-list__location-events">
                            <div class="govuk-grid-column-full">
                                <h2 class="govuk-heading-m">{{ "1 person allocated" if location.prisonerEvents | length == 1 else location.prisonerEvents | length + " people allocated" }}</h2>

                                {% if locations | length == 1 %}
                                    <div class="moj-action-bar govuk-!-display-none-print">
                                    <div class="moj-action-bar__filter"></div>
                                      {{ govukButton({
                                        attributes: { id: 'print-movement-list' },
                                        text: "Print this movement list",
                                        classes: "govuk-button--blue js-print no-js-hidden",
                                        preventDoubleClick: true
                                      }) }}
                                    </div>
                                {% endif %}

                                {% set headRows = [
                                    {
                                        classes: "print-only"
                                    }, {
                                        text: "Name",
                                        attributes: { "aria-sort": "none" }
                                    }, {
                                        text: "Cell location",
                                        attributes: { "aria-sort": "ascending" }
                                    }
                                ] %}

                                {% if movementListJourney.alertFilters | length %}
                                    {% set headRows = headRows.concat(
                                        {
                                            text: "Relevant alerts"
                                        }
                                    ) %}
                                {% endif %}

                                {% set headRows = headRows.concat(
                                    {
                                        text: "Event details",
                                        attributes: { "aria-sort": "none" }
                                    }, {
                                        text: "Time",
                                        attributes: { "aria-sort": "none" }
                                    }, {
                                        text: "Clashing events"
                                    }
                                ) %}

                                {{ govukTable({
                                    attributes: {
                                        'data-module': 'moj-sortable-table',
                                        'data-qa': 'location-' + locationIndex + '-prisoner-events'
                                    },
                                    head: headRows,
                                    rows: prisonerEventsTableRows
                                }) }}
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
    </div>
{% endblock %}
