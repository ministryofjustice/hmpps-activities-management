{% extends "layout.njk" %}

{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/inset-text/macro.njk" import govukInsetText %}
{% from "govuk/components/details/macro.njk" import govukDetails %}
{% from 'components/hmppsDatePicker.njk' import hmppsDatePicker %}
{% from "partials/activities/activity-journey-caption.njk" import activityJourneyCaption %}

{% set pageTitle = applicationName + " - Create an activity - Pay" %}
{% set pageId = 'pay-page' %}
{% set jsBackLink = true %}

{% set editMode = session.req.params.mode == 'edit' and iep and band %}

{% block content %}
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            {{ activityJourneyCaption(session.createJourney) }}
            {% if editMode %}
                <h1 class="govuk-heading-l">Change {{ iep }} incentive level: {{ band.alias }}</h1>
            {% else %}
                {% if payRateType === "single" %}
                    <h1 class="govuk-heading-l">Enter pay amount and pay band name for the {{ session.createJourney.incentiveLevel }} incentive level pay rate</h1>
                {% else %}
                    <h1 class="govuk-heading-l">Enter pay amount and pay band name for the flat-rate incentive level pay rate</h1>
                {% endif %}
            {% endif %}

            <form method="POST">
                <input type="hidden" name="_csrf" value="{{ csrfToken }}" />

                {% if editMode %}
                    {{ govukInsetText({
                        text: 'This change will replace the change set to take effect from ' + paymentStartDate | isoDateToDatePickerDate
                    }) }}
                 {% endif %}

                {{ govukInput({
                    id: "rate",
                    name: "rate",
                    label: {
                        text: "1. How much will someone be paid for a session?",
                        classes: "govuk-label--s"
                    },
                    hint: {
                        text: 'Minimum pay for people in your prison is £' + (minimumPayRate / 100) | toFixed + ' and maximum pay is £' + (maximumPayRate / 100) | toFixed + ' per session.'
                    },
                    prefix: {
                        text: "£"
                    },
                    classes: "govuk-input--width-5",
                    errorMessage: validationErrors | findError('rate'),
                    value: formResponses.rate or (rate / 100) | toFixed
                }) }}

                {% set payBandOptions = [
                    {
                        value: 0,
                        text: "-"
                    }
                ] %}
                {% for payBand in payBands %}
                    {% set payBandOptions = (payBandOptions.push(
                        {
                            value: payBand.id,
                            text: payBand.alias,
                            selected: payBand.id == formResponses.bandId or (payBand.id == band.id and not formResponses)
                        }
                    ), payBandOptions) %}
                {% endfor %}
                {{ govukSelect({
                    id: "bandId",
                    name: "bandId",
                    label: {
                        text: "2. Select the pay band",
                        classes: "govuk-label--s"
                    },
                    classes: "govuk-input--width-10",
                    errorMessage: validationErrors | findError('bandId'),
                    items: payBandOptions
                }) }}

                {{ govukDetails({
                    summaryText: "What is a pay band?",
                    html: '
                            <p>\'Pay band\' is a label to help you easily tell the difference between the pay rates that someone can be paid for
                            this activity.</p>
                            <p>For example you might have a pay band called \'unskilled\' and another called \'skilled\'.</p>
                          '
                }) }}


                {% if payRateType === "single" %}
                    {% if session.req.params.mode == 'edit' and hasAllocations %}
                        <input type='hidden' name='incentiveLevel' value='{{ iep }}' >
                    {% elseif session.req.params.mode == 'create' and session.createJourney.incentiveLevel !== null %}
                        <input type='hidden' name='incentiveLevel' value='{{ session.createJourney.incentiveLevel }}' >
                    {% else %}
                        {% set incentiveLevelOptions = [] %}
                        {% for incentiveLevel in incentiveLevels %}
                            {% set incentiveLevelOptions = (incentiveLevelOptions.push(
                                {
                                    value: incentiveLevel.levelName,
                                    text: incentiveLevel.levelName,
                                    checked: incentiveLevel.levelName == formResponses.incentiveLevel or (incentiveLevel.levelName == iep and not formResponses)
                                }
                            ), incentiveLevelOptions) %}
                        {% endfor %}
                        {{ govukRadios({
                            name: "incentiveLevel",
                            fieldset: {
                                legend: {
                                    text: "3. Select the incentive level",
                                    classes: "govuk-fieldset__legend--s"
                                }
                            },
                            hint: {
                                text: 'Only prisoners with the specified incentive level can be allocated to this pay rate.'
                            },
                            items: incentiveLevelOptions,
                            errorMessage: validationErrors | findError('incentiveLevel')
                        }) }}
                        {{ hmppsDatePicker({
                            id: 'startDate',
                            name: 'startDate',
                            label: {
                                text: "Change the start date for this activity" if session.req.params.mode == 'edit' else "Enter the start date for this activity",
                                classes: "govuk-label--l",
                                isPageHeading: true
                            },
                            classes: 'hmpps-datepicker--fixed-width',
                            hint: {
                                text: 'Enter the date, for example ' + exampleDatePickerDate() + ', or click on the calendar to select'
                            },
                            errorMessage: validationErrors | findError('startDate'),
                            value: paymentStartDate | isoDateToDatePickerDate
                        }) }}
                    {% endif %}
                {% endif %}

                {{ govukButton({
                    text: "Save and continue"
                }) }}
            </form>
        </div>
    </div>
{% endblock %}
