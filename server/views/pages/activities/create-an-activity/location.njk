{% extends "layout.njk" %}

{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/warning-text/macro.njk" import govukWarningText %}
{% from "partials/activities/activity-journey-caption.njk" import activityJourneyCaption %}

{% set pageTitle = applicationName + " - Create a schedule - Location" %}
{% set pageId = 'create-schedule-location-page' %}
{% set backLinkHref = "bank-holiday-option" %}

{% set options = [{ value: '-', text: '' }] %}
{% for location in locations %}
    {% set options = (options.push( { value: location.locationId, text: location.userDescription }), options) %}
{% endfor %}

{% block meta %}
    <meta name="autocompleteElements" content="location"/>
{% endblock %}

{% block content %}
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <form method="POST">
                <input type="hidden" name="_csrf" value="{{ csrfToken }}" />
                {{ activityJourneyCaption(session.createJourney) }}
                {{ govukRadios({
                    id: "location-type",
                    name: "locationType",
                    fieldset: {
                        legend: {
                            text: 'Enter the new activity location' if session.req.query.fromEditActivity else 'Where does this activity take place?',
                            classes: "govuk-label--l",
                            isPageHeading: true
                        }
                    },
                    items: [
                        {
                            value: "OUT_OF_CELL",
                            text: "Out of cell",
                            checked: formResponses.location or session.createJourney.location,
                            conditional: {
                                html: govukSelect({
                                    id: "location",
                                    name: "location",
                                    label: {
                                        text: "Start typing a location and select from the list of options."
                                    },
                                    errorMessage: validationErrors | findError('location'),
                                    value: formResponses.location or session.createJourney.location.id,
                                    items: options
                                })
                            }
                        },
                        {
                            value: "ON_WING",
                            text: "On wing",
                            checked: formResponses.onWing == true or session.createJourney.onWing == true
                        },
                        {
                            value: "IN_CELL",
                            text: "In cell",
                            checked: formResponses.inCell == true or session.createJourney.inCell == true
                        }
                    ]
                }) }}

                {% if session.req.query.fromEditActivity %}
                    {{ govukWarningText({
                        text: "Changing the location may affect the security risk and the capacity of this activity.",
                        iconFallbackText: "Warning"
                    }) }}
                    <div class="govuk-button-group">
                      {{ govukButton({
                        text: "Update activity location"
                      }) }}
                        <a class="govuk-link js-backlink" href="/">Cancel</a>
                    </div>
                {% else %}
                    {{ govukButton({
                        text: "Continue"
                    }) }}
                {% endif %}
            </form>
        </div>
    </div>
{% endblock %}
