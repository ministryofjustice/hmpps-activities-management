{% extends "layout.njk" %}

{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/inset-text/macro.njk" import govukInsetText %}
{% from "govuk/components/tag/macro.njk" import govukTag %}
{% from "../../../partials/activities/days-and-custom-times.njk" import daysAndCustomTimes %}

{% set pageTitle = applicationName + " - Activities Dashboard - View activity" %}
{% set pageId = 'view-activity-page' %}
{% set hardBackLinkText = 'Back to activities dashboard' %}
{% set hardBackLinkHref = '/activities/dashboard' %}

{% set activityEnded = schedule.endDate and schedule.endDate < now | toDateString %}

{% block content %}
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <h1 class="govuk-heading-l">Edit activity details</h1>
            <h2 class="govuk-heading-m">Activity details</h2>

            {{ govukSummaryList({
                  rows: [
                    {
                        key: {
                            text: "Activity category"
                        },
                        value: {
                            text: activity.category.name
                        },
                        actions: {
                            items: [
                                {
                                    href: "/activities/edit/" + activity.id + "/category?preserveHistory=true",
                                    text: "Change",
                                    visuallyHiddenText: " category",
                                    classes: "govuk-link--no-visited-state"
                                }
                            ]
                        } if not activityEnded
                    },
                    {
                        key: {
                            text: "Activity name"
                        },
                        value: {
                            text: activity.summary
                        },
                        actions: {
                            items: [
                                {
                                    href: "/activities/edit/" + activity.id + "/name?preserveHistory=true",
                                    text: "Change",
                                    visuallyHiddenText: " activity name",
                                    classes: "govuk-link--no-visited-state"
                                }
                            ]
                        } if not activityEnded
                    },
                    {
                        key: {
                            text: "Tier"
                        },
                        value: {
                            text: tier or "Not set"
                        },
                        actions: {
                            items: [
                                {
                                    href: "/activities/edit/" + activity.id + "/tier?preserveHistory=true",
                                    text: "Change",
                                    visuallyHiddenText: " tier"
                                }
                            ] if not activityEnded and activity.category.code != 'SAA_NOT_IN_WORK'
                        }
                    },
                    {
                        key: {
                            text: "Organiser"
                        },
                        value: {
                            text: organiser
                        },
                        actions: {
                            items: [
                                {
                                    href: "/activities/edit/" + activity.id + "/organiser?preserveHistory=true",
                                    text: "Change",
                                    visuallyHiddenText: " organiser"
                                }
                            ]
                        } if not activityEnded
                    } if organiser,
                    {
                        key: { text: "Record attendance" },
                        value: { text: "Yes" if activity.attendanceRequired else "No"},
                        actions: {
                            items: [{
                                href: "/activities/edit/" + activity.id + "/attendance-required?preserveHistory=true",
                                text: "Change",
                                visuallyHiddenText: " record attendance option"
                            }]
                        } if not (activityEnded or schedule.activity.paid or (activity.attendanceRequired and activity.tier.code != 'FOUNDATION'))
                    }
                ]
            }) }}

            <h2 class="govuk-heading-m">Location and capacity</h2>
            {{ govukSummaryList({
                rows: [
                    {
                        key: {
                            text: "Location"
                        },
                        value: {
                            text: locationText(schedule)
                        },
                        actions: {
                            items: [
                                {
                                    href: "/activities/edit/" + activity.id + "/location?preserveHistory=true",
                                    text: "Change",
                                    visuallyHiddenText: " location",
                                    classes: "govuk-link--no-visited-state"
                                }
                            ]
                        } if not activityEnded
                    },
                    {
                        key: {
                            text: "Capacity"
                        },
                        value: {
                            text: schedule.capacity
                        },
                        actions: {
                            items: [
                                {
                                    href: "/activities/edit/" + activity.id + "/capacity?preserveHistory=true",
                                    text: "Change",
                                    visuallyHiddenText: " capacity",
                                    classes: "govuk-link--no-visited-state"
                                }
                            ]
                        } if not activityEnded
                    }
                ]
            }) }}

            <h2 class="govuk-heading-m">Requirements and suitability</h2>
            {{ govukSummaryList({
                rows: [
                    {
                        key: {
                            text: "Suitable for workplace risk assessment level"
                        },
                        value: {
                            text: riskLevel(activity)
                        },
                        actions: {
                            items: [
                                {
                                    href: "/activities/edit/" + activity.id + "/risk-level?preserveHistory=true",
                                    text: "Change",
                                    visuallyHiddenText: " risk level",
                                    classes: "govuk-link--no-visited-state"
                                }
                            ]
                        } if not activityEnded
                    },
                    {
                        key: {
                            text: "Education requirements"
                        },
                        value: {
                            html: educationRequirementsContent(activity.minimumEducationLevel)
                        },
                        actions: {
                            items: [
                                {
                                    href: "/activities/edit/" + activity.id + "/check-education-level?preserveHistory=true",
                                    text: "Change",
                                    visuallyHiddenText: " education levels",
                                    classes: "govuk-link--no-visited-state"
                                }
                            ]
                        } if not activityEnded
                    }
                ]
            }) }}
            <h2 class="govuk-heading-m">Pay rates</h2>
            {{ govukSummaryList({
                rows: [
                    {
                        key: {
                            text: "Pay rates"
                        },
                        value: {
                            html: paySummary(schedule.activity.paid, incentiveLevelPays, payEditable) if not futurePayRatesFlag else displayPaySummary(schedule.activity.paid, displayPays, payEditable)
                    },
                        actions: {
                            items: [
                                {
                                    href: "/activities/edit/" + activity.id + "/" + ("check-pay" if schedule.activity.paid else "pay-option") + "?preserveHistory=true",
                                    text: "Change",
                                    visuallyHiddenText: " pay",
                                    classes: "govuk-link--no-visited-state",
					                attributes: { "data-qa": "change-pay-link" }
                                }
                            ]
                        } if not activityEnded and payEditable
                    }
                ]
            }) }}

            <h2 class="govuk-heading-m">Schedule and dates</h2>
            {{ govukInsetText({ 
                text: 'The current week is: Week ' + currentWeek,
                classes: 'govuk-!-margin-top-0 govuk-!-margin-bottom-0'
            }) if schedule.scheduleWeeks > 1 and currentWeek }}
            {% set dateAndScheduleRows = [{
                key: {
                    text: "Start date"
                },
                value: {
                    text: schedule.startDate | toDate | formatDate
                },
                actions: {
                    items: [
                        {
                            html: govukTag({ text: 'Started', classes: 'govuk-tag--small govuk-tag--green' })
                        } if schedule.startDate <= now | toDateString else
                        {
                            href: "/activities/edit/" + activity.id + "/start-date?preserveHistory=true",
                            text: "Change",
                            visuallyHiddenText: " start date",
                            classes: "govuk-link--no-visited-state"
                        }
                    ]
                }
            }] %}

            {% set dateAndScheduleRows = (dateAndScheduleRows.push({
                key: {
                    text: "End date"
                },
                value: {
                    text: schedule.endDate | toDate | formatDate if schedule.endDate else "None set"
                },
                actions: {
                    items: [
                        {
                            href: "/activities/edit/" + activity.id + ("/remove-end-date" if schedule.endDate else "/end-date?preserveHistory=true"),
                            text: "Change",
                            visuallyHiddenText: " end date",
                            classes: "govuk-link--no-visited-state"
                        }
                    ]
                } if not activityEnded
            }), dateAndScheduleRows) %}

            {% set dateAndScheduleRows = (dateAndScheduleRows.push({
                key: {
                    text: "Repeats"
                },
                value: {
                    text: session.createJourney.scheduleWeeks + ' weekly' if session.createJourney.scheduleWeeks > 1 else 'Weekly'
                }
            }), dateAndScheduleRows) %}

            {% for week, slots in slots %}
                {% set dateAndScheduleRows = (dateAndScheduleRows.push(
                    {
                        key: {
                        text: "Week " + week
                    },
                        value: { html: daysAndCustomTimes(slots) },
                        actions: {
                            items: [
                                {
                                    href: "/activities/edit/" + activity.id + "/custom-times-change-option?preserveHistory=true",
                                    text: "Change",
                                    visuallyHiddenText: " session times",
                                    classes: "govuk-link--no-visited-state",
                                    attributes: { "data-qa": "change-schedule-link" }
                                }
                            ]
                            } if not activityEnded
                    }
                ), dateAndScheduleRows) %}
            {% endfor %}

            {% set dateAndScheduleRows = (dateAndScheduleRows.push(
                {
                    key: {
                        text: "Runs on bank holidays"
                    },
                    value: {
                        text: "Yes" if schedule.runsOnBankHoliday else "No"
                    },
                    actions: {
                        items: [
                            {
                                href: "/activities/edit/" + activity.id + "/bank-holiday-option?preserveHistory=true",
                                text: "Change",
                                visuallyHiddenText: " bank holiday",
                                classes: "govuk-link--no-visited-state"
                            }
                        ]
                    } if not activityEnded
                }
            ), dateAndScheduleRows) %}

            {{ govukSummaryList({
                rows: dateAndScheduleRows
            }) }}

            <div class="govuk-button-group">
                <a href="/activities/dashboard" class="govuk-link">Return to dashboard</a>
            </div>

        </div>
    </div>
{% endblock %}

{% macro educationRequirementsContent(educationRequirements) %}
    {% if educationRequirements | length > 0 %}
        {% for educationRequirement in educationRequirements %}
            <div class="govuk-!-margin-bottom-2">
                <div>{{ educationRequirement.studyAreaDescription }}: {{ educationRequirement.educationLevelDescription }}</div>
            </div>
        {% endfor %}
    {% else %}
        None
    {% endif %}
{% endmacro %}

{% macro paySummary(activityPaid, incentiveLevelPays, payEditable) %}
    {% if activityPaid %}
        {% if incentiveLevelPays | length > 0 %}
            {% for incentiveLevelPay in incentiveLevelPays %}
                <div class="govuk-!-margin-bottom-2">
                    <div class="govuk-!-font-weight-bold">{{ incentiveLevelPay.incentiveLevel }} incentive level pay</div>
                    {% for pay in incentiveLevelPay.pays %}
                        <div>{{ pay.prisonPayBand.alias }}: {{ pay.rate | toMoney }}</div>
                    {% endfor %}
                </div>
            {% endfor %}
        {% else %}
            None added yet
        {% endif %}
    {% else %}
        <p class="govuk-body govuk-!-margin-0">People are not paid for this activity</p>
        {% if not payEditable %}
            <div class="govuk-hint">You cannot change this while people are allocated to the activity.</div>
        {% endif %}
    {% endif %}
{% endmacro %}

{% macro displayPaySummary(activityPaid, displayPays, payEditable) %}
    {% if activityPaid %}
        {% if displayPays | length > 0 %}
            {% for displayPay in displayPays %}
                <div class="govuk-!-margin-bottom-2">
                    <div class="govuk-!-font-weight-bold">{{ displayPay.incentiveLevel }} incentive level pay</div>
                    {% for pay in displayPay.pays %}
                        <div>{{ pay.prisonPayBand.alias }}: {{ pay.rate | toMoney if pay.description === undefined else pay.rate | toMoney + pay.description }} </div>
                    {% endfor %}
                </div>
            {% endfor %}
        {% else %}
            None added yet
        {% endif %}
    {% else %}
        <p class="govuk-body govuk-!-margin-0">People are not paid for this activity</p>
        {% if not payEditable %}
            <div class="govuk-hint">You cannot change this while people are allocated to the activity.</div>
        {% endif %}
    {% endif %}
{% endmacro %}

{% macro locationText(schedule) %}
    {% if schedule.activity.inCell %}
        {{ "In cell" }}
    {% elseif schedule.activity.onWing %}
        {{ "On wing" }}
    {% elseif schedule.activity.offWing %}
        {{ "Off wing" }}
    {% else %}
        {{ schedule.internalLocation.description | trim | title }}
    {% endif %}
{% endmacro %}

{% macro activityStartedTag() %}
    {{ govukTag({
        text: "Started",
        classes: "govuk-tag--green"
    }) }}
{% endmacro %}

{% macro riskLevel(activity) %}
    {% if activity.riskLevel == 'low' %}
        Low
    {% elseif activity.riskLevel == 'medium' %}
        Low and Medium
    {% elseif activity.riskLevel == 'high' %}
        Low, Medium and High
    {% endif %}
{% endmacro %}
