{% extends "layout.njk" %}

{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "moj/components/filter/macro.njk" import mojFilter %}
{% from "components/datePicker.njk" import datePicker %}

{% from "partials/appointmentPrisonerSummary.njk" import appointmentPrisonerSummary %}
{% from "pages/appointments/partials/prisoner-list.njk" import prisonerList %}

{% set pageTitle = "Appointments Management - Appointment Search Results" %}
{% set pageId = 'appointments-search-results-page' %}
{% set backLinkHref = "/" %}

{% set categoryOptions = [{ value: "", text: "" }] %}
{% for category in categories %}
    {% set categoryOptions = (categoryOptions.push( { value: category.code, text: category.description } ), categoryOptions) %}
{% endfor %}

{% set locationOptions = [{ value: "", text: "" }] %}
{% for location in locations %}
    {% set locationOptions = (locationOptions.push( { value: location.id, text: location.description }), locationOptions) %}
{% endfor %}

{% block meta %}
    <meta name="autocompleteElements" content="categoryCode,locationId"/>
{% endblock %}

{% set resultsTableRows = [] %}
{% set index = 0 %}
{% for result in results %}
    {% set resultsTableRows = (resultsTableRows.push([
        {
            text: result.startDate | toDate | formatDate('d MMM yyyy'),
            attributes: { 'data-qa': 'result-date-' + index }
        }, {
            text: result.startTime + " to " + result.endTime,
            attributes: { 'data-qa': 'result-time-' + index }
        }, {
            text: result.category.description,
            attributes: { 'data-qa': 'result-category-' + index }
        }, {
            text: result.internalLocation.description,
            attributes: { 'data-qa': 'result-location-' + index }
        }, {
            text: (result.sequenceNumber + " of " + result.maxSequenceNumber if result.isRepeat),
            attributes: { 'data-qa': 'result-sequence-number-' + index }
        }, {
            html: '<a href="/appointments/' + result.appointmentId + '/occurrence/' + result.appointmentOccurrenceId + '"
                class="govuk-link--no-visited-state">
                View and edit<span class="govuk-visually-hidden"> occurrence</span>
            </a>',
            classes: 'govuk-!-text-align-right',
            attributes: { 'data-qa': 'view-and-edit-result-' + index }
        }
    ]), resultsTableRows) %}
    {% set index = index + 1 %}
{% endfor %}

{% block content %}
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <span class="govuk-caption-l">Appointment management</span>
            <h1 class="govuk-heading-l">View and edit an appointment</h1>
        </div>
    </div>

    {% set filterOptionsHtml %}
        {{ datePicker({
            id: 'startDate',
            name: 'startDate',
            label: {
                text: "Start date",
                classes: "govuk-label--m"
            },
            renderedErrorMessage: validationErrors | findError('startDate'),
            validationErrors: validationErrors,
            formResponses: formResponses.startDate or startDate
        }) }}

        {{ govukRadios({
            name: "timeSlot",
            fieldset: {
                legend: {
                    text: "Time period",
                    classes: "govuk-fieldset__legend--m"
                }
            },
            errorMessage: validationErrors | findError('timeSlot'),
            items: [
                {
                    value: TimeSlot.AM,
                    text: "Morning (AM)",
                    checked: (formResponses.timeSlot or timeSlot) == TimeSlot.AM
                },
                {
                    value: TimeSlot.PM,
                    text: "Afternoon (PM)",
                    checked: (formResponses.timeSlot or timeSlot) == TimeSlot.PM
                },
                {
                    value: TimeSlot.ED,
                    text: "Evening (ED)",
                    checked: (formResponses.timeSlot or timeSlot) == TimeSlot.ED
                }
            ]
        }) }}

        {{ govukSelect({
            id: "categoryCode",
            name: "categoryCode",
            label: {
                text: "Category",
                classes: "govuk-label--m"
            },
            errorMessage: validationErrors | findError('categoryCode'),
            items: categoryOptions,
            value: formResponses.categoryCode or categoryCode
        }) }}

        {{ govukSelect({
            id: "locationId",
            name: "locationId",
            label: {
                text: "Location",
                classes: "govuk-label--m"
            },
            errorMessage: validationErrors | findError('locationId'),
            items: locationOptions,
            value: formResponses.locationId or locationId
        }) }}
    {% endset %}

    <div class="moj-filter-layout" data-module="activities-list-filter">
        <div class="moj-filter-layout__filter govuk-!-display-none-print">
            <form method="POST">
                <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>
                {{ mojFilter({
                    heading: {
                        text: 'Filter'
                    },
                    optionsHtml: filterOptionsHtml
                }) }}
            </form>
        </div>
        <div class="moj-filter-layout__content">
            <div class="moj-action-bar govuk-!-display-none-print">
                <div class="moj-action-bar__filter"></div>
            </div>

            {{ govukTable({
                attributes: {
                    'data-module': 'moj-sortable-table',
                    'data-qa': 'search-results'
                },
                caption: "Appointments",
                head: [{
                    text: "Date",
                    attributes: { "aria-sort": "ascending" }
                },
                {
                    text: "Time",
                    attributes: { "aria-sort": "none" }
                },
                {
                    text: "Category",
                    attributes: { "aria-sort": "none" }
                },
                {
                    text: "Location",
                    attributes: { "aria-sort": "none" }
                },
                {
                    text: "Occurrence",
                    attributes: { "aria-sort": "none" }
                },
                {
                    html: '<span class="govuk-visually-hidden">Actions</span>'
                }],
                rows: resultsTableRows
            }) }}
        </div>
    </div>
{% endblock %}
