{% extends "layout.njk" %}

{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "moj/components/filter/macro.njk" import mojFilter %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from 'components/hmppsDatePicker.njk' import hmppsDatePicker %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "components/stat.njk" import stat %}

{% set pageTitle = "Appointments attendance summary" %}
{% set pageId = 'appointment-attendance-summary-stats-dashboard' %}
{% set hardBackLinkText = "Back to choose a date" %}
{% set hardBackLinkHref = "/appointments/attendance-summary/select-date" %}

{% set otherDateHintHtml %}
  <div>For example {{ exampleDatePickerDate() }}</div>
{% endset %}

{% set appointmentNameOptions = [{ value: "", text: "" }] %}
{% for category in categories %}
    {% set appointmentNameOptions = (appointmentNameOptions.push({
        text: category.description,
        value: category.code
    }), appointmentNameOptions) %}

{% endfor %}

{% set filterOptionsHtml %}
    {{
      hmppsDatePicker({
        id: 'date',
        name: 'date',
        classes: 'hmpps-datepicker--fixed-width',
        label: {
            text: 'Date',
            classes: 'govuk-!-font-weight-bold'
        },
        hint: { html: otherDateHintHtml },
        errorMessage: validationErrors | findError('date'),
        value: date | isoDateToDatePickerDate
      })
    }}
    {{ govukSelect({
      id: "appointmentName",
      name: "appointmentName",
      label: {
          text: "Appointment name",
          classes: "govuk-label--s"
      },
      errorMessage: validationErrors | findError('appointmentName'),
      items: appointmentNameOptions,
      value: appointmentName
    }) }}
    {{ govukInput({
      label: {
        text: "Appointment custom name",
        classes: "govuk-label--s"
      },
      id: "customAppointmentName",
      name: "customAppointmentName",
      value: customAppointmentName
    }) }}
    <button class="govuk-button govuk-!-margin-top-3" data-module="govuk-button" type="submit">
      Apply filters
    </button>
{% endset %}

{% block content %}
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-three-quarters">
      <span class="govuk-caption-l">{{ date | formatDate }}</span>
      <h1 class="govuk-heading-xl">Appointments attendance summary</h1>
    </div>
    <div class="govuk-grid-column-one-quarter govuk-!-padding-right-0 govuk-!-text-align-right">
      <div class="govuk-hint govuk-!-font-size-16">Updated at {{ now | formatDate('HH:mm') }} on {{ now | formatDate('d MMMM yyyy') }}</div>
      {{ govukButton({
          text: "Refresh",
          classes: "govuk-button--blue"
      }) }}
    </div>
    <div class="govuk-grid-column-full">
      <h2 class="govuk-body-l">{{ attendanceSummary.attendeeCount }} attendees for 
          <a href="/appointments/attendance/summaries?date={{ date | formatDate('yyyy-MM-dd') }}&appointmentName={{appointmentName}}&customAppointmentName={{customAppointmentName}}">{{ summariesNotCancelled | length }} appointment{{ "s" if summariesNotCancelled | length != 1 }}</a>
      </h2>
    </div>
  </div>
  <div class="moj-filter-layout" data-module="activities-list-filter">
    <div class="moj-filter-layout__filter moj-filter-layout__filter--small">
      <form id="filter-form" method="POST" novalidate>
        <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>
        {{ mojFilter({
            heading: {
                text: 'Filter'
            },
            optionsHtml: filterOptionsHtml
        }) }}
      </form>
    </div>
    <div class="moj-filter-layout__content moj-filter-layout__content--stats">
        <div class="moj-action-bar">
          <div class="moj-action-bar__filter moj-action-bar__filter--no-actions"></div>
        </div>

      <div class="">
        <div class="govuk-grid-row govuk-!-margin-left-1">
        {{ stat({
          heading: "Attended",
          number: attendanceSummary.attended,
          visuallyHiddenText: "prisoners, which is",
          percentage: attendanceSummary.attendedPercentage,
          width: 'stat--small',
          forceDisplay: true,
          link: {
            href: '#',
            text: 'All attended'
          }
        }) }}
        {{ stat({
          heading: "Not attended",
          number: attendanceSummary.notAttended,
          visuallyHiddenText: "prisoners, which is",
          percentage: attendanceSummary.notAttendedPercentage,
          width: 'stat--small',
          forceDisplay: true,
          link: {
            href: '#',
            text: 'All not attended'
          }
        }) }}
        {{ stat({
          heading: "Not recorded yet",
          number: attendanceSummary.notRecorded,
          visuallyHiddenText: "prisoners, which is",
          percentage: attendanceSummary.notRecordedPercentage,
          width: 'stat--small',
          forceDisplay: true,
          link: {
            href: '#',
            text: 'All not recorded yet'
          }
        }) }}
        </div>

        <hr class="govuk-section-break govuk-section-break--m govuk-section-break--visible">

        <div class="govuk-grid-row govuk-!-margin-left-1">
        <h3 class="govuk-heading-l">Attendance by tier</h3>
        <p class="govuk-body-l">Attendances recorded at appointments in each tier.</p>

        {{ stat({
          heading: "Tier 1",
          number: attendanceSummary.tier1Count,
          visuallyHiddenText: "prisoners, which is",
          percentage: 1,
          width: 'stat--small',
          forceDisplay: true,
          link: {
            href: '#',
            text: 'All tier 1'
          }
        }) }}
        {{ stat({
          heading: "Tier 2",
          number: attendanceSummary.tier2Count,
          visuallyHiddenText: "prisoners, which is",
          percentage: 1,
          width: 'stat--small',
          forceDisplay: true,
          link: {
            href: '#',
            text: 'All tier 2'
          }
        }) }}
        {{ stat({
          heading: "Routine (also called 'foundational')",
          number: attendanceSummary.foundationCount,
          visuallyHiddenText: "prisoners, which is",
          percentage: 1,
          width: 'stat--med',
          forceDisplay: true,
          link: {
            href: '#',
            text: 'All routine'
          }
        }) }}
        </div>

        <hr class="govuk-section-break govuk-section-break--m govuk-section-break--visible">
        <div class="govuk-grid-row govuk-!-margin-bottom-6 govuk-!-margin-left-1">
        <h3 class="govuk-body-l">Cancelled appointments</h3>

        {{ stat({
          heading: "Cancelled appointments",
          number: cancelledCount,
          visuallyHiddenText: "prisoners, which is",
          width: 'stat--med',
          forceDisplay: true,
          link: {
            href: '#',
            text: 'All cancelled'
          }
        }) }}
        </div>
      </div>
    </div>
    </div>

    {% endblock %}

{% block meta %}
    <meta name="autocompleteElements" content="appointmentName"/>
{% endblock %}