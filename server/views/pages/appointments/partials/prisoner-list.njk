{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}
{% from "partials/showProfileLink.njk" import showProfileLink %}

{% macro prisonerList(appointmentId, appointmentOccurrenceId, appointmentType, repeat, prisoners) %}
    {% set occurenceLink = '/appointments/' + appointmentId + '/occurrence/' + appointmentOccurrenceId  %}
    {% set prisonerListRows = [] %}
    {% for prisoner in prisoners %}
        {% set prisonerListRows = (prisonerListRows.push({
            key: {
                text: "Prisoner"
            },
            value: {
                html: showProfileLink({
                    name: prisoner | fullName,
                    prisonerNumber: prisoner.prisonerNumber,
                    cellLocation: prisoner.cellLocation,
                    link: true
                })
            },
            actions: {
                items: [
                    {
                        href: occurenceLink + "/edit/start/" + prisoner.prisonerNumber + "/remove",
                        text: "Remove",
                        classes: "govuk-link--no-visited-state",
                        attributes: { 'data-qa': 'remove-prisoner' }
                    }
                ] if prisoners.length > 1
            }
        }), prisonerListRows) %}
    {% endfor %}

    {% set prisonerActionItems = [{
        href: (occurenceLink + "/movement-slip" if repeat) + ("/appointments/" + appointmentId + "/movement-slip" if repeat == null),
        text: "Print movement slip" + ("s" if prisoners.length > 1 ),
        classes: "govuk-link--no-visited-state",
        attributes: { 'data-qa': 'print-movement-slips' }
    }] %}
    {% if appointmentType == AppointmentType.GROUP %}
        {% set prisonerActionItems = (prisonerActionItems.push(
            {
                href: occurenceLink + "/edit/start/prisoners/add",
                text: "Add prisoners",
                classes: "govuk-link--no-visited-state",
                attributes: { 'data-qa': 'add-prisoners' }
            }
        ), prisonerActionItems) %}
    {% endif %}

    {% for occurrence in appointment.occurrences %}
        {% set occurrenceDate = occurrence.startDate | toDate %}
        {% set occurrenceTableRows = (occurrenceTableRows.push([
            {
                text: occurrence.sequenceNumber,
                classes: "govuk-!-font-weight-regular govuk-!-text-align-right",
                attributes: { 'data-qa': 'occurrence-sequence-no-' + occurrence.sequenceNumber }
            }, {
                text: occurrenceDate | formatDate('d MMM yyyy'),
                attributes: { 'data-qa': 'occurrence-date-' + occurrence.sequenceNumber }
            }, {
                html: govukTag({ text: "Edited" }) if occurrence.updated,
                attributes: { 'data-qa': 'occurrence-edited-' + occurrence.sequenceNumber }
            }, {
                html: '<a href="/appointments/' + appointment.id + '/occurrence/' + occurrence.id + '"
                class="govuk-link--no-visited-state">
                View and manage<span class="govuk-visually-hidden"> appointment ' + occurrence.sequenceNumber + '</span>
            </a>',
                classes: 'govuk-!-text-align-right',
                attributes: { 'data-qa': 'view-and-edit-appointment-' + occurrence.sequenceNumber }
            }
        ]), occurrenceTableRows) %}
    {% endfor %}

    {{ govukSummaryList({
        card: {
            title: {
                text: ("Prisoner (1)" if prisoners.length == 1 ) + ("Prisoners (" + prisoners | length + ")" if prisoners.length > 1 )
            },
            actions: {
                items: prisonerActionItems
            }
        },
        rows: prisonerListRows,
        attributes: { 'data-qa': 'prisoner-list' }
    }) }}
{% endmacro %}
