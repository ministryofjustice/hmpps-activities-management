{% extends "layout.njk" %}

{% from "components/searchBar.njk" import searchBar %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "moj/components/filter/macro.njk" import mojFilter %}
{% from "components/sticky-select.njk" import stickySelect %}
{% from "govuk/components/tag/macro.njk" import govukTag %}
{% from "partials/showProfileLink.njk" import showProfileLink %}
{% from "partials/statusBasedCellLocation.njk" import statusBasedCellLocation %}
{% from "partials/showLocation.njk" import showLocation %}

{% set pageTitle = "Appointment attendance summaries" %}
{% set pageId = 'appointment-attendance-summaries-page' %}
{% set jsBackLink = true %}

{% set filterParams = (('&searchTerm=' + session.req.query.searchTerm) if session.req.query.searchTerm else '') +
    (('&locationId=' + session.req.query.locationId) if session.req.query.locationId else '') +
    (('&locationType=' + session.req.query.locationType) if session.req.query.locationType else '') %}

{% block meta %}
    <meta name="autocompleteElements" content="locationId"/>
{% endblock %}

{% macro attendees(attendees, prisonerDetails, user) %}
    {% if attendees | length == 1 %}
        {% set prisonerDetails = prisonersDetails[attendees[0].prisonerNumber] %}
        {{ showProfileLink({
            firstName: prisonerDetails.firstName,
            middleNames: prisonerDetails.middleNames,
            lastName: prisonerDetails.lastName,
            prisonerNumber: prisonerDetails.prisonerNumber or attendees[0].prisonerNumber,
            cellLocation: statusBasedCellLocation(prisonerDetails.cellLocation, prisonerDetails.status, prisonerDetails.prisonId == user.activeCaseLoadId),
            link: true,
            classes: 'hmpps-inline-block'
        }) }}
    {% else %}
        {{ attendees.length }}
    {% endif %}
{% endmacro %}

{% macro summaryLink(summary) %}
    <a href="/appointments/attendance/{{ summary.id }}/attendees" class="govuk-link--no-visited-state" target="_blank">
        {{ summary.appointmentName }}<span class="govuk-visually-hidden"> (opens in new tab)</span>
    </a>
{% endmacro %}

{% set summariesTableRows = [] %}
{% for summary in summaries %}
    {% set summariesTableRows = (summariesTableRows.push({
        visuallyHiddenText: 'Select ' + summary.appointmentName,
        value: summary.id,
        selectable: true,
        items: [
            {
                html: summaryLink(summary),
                attributes: {
                    'data-qa': 'appointment-attendance-summary-' + loop.index + '-name',
                    "data-sort-value": summary.appointmentName + " " + summary.startTime + (" to " + summary.endTime if summary.endTime)
                }
            }, {
                text: showLocation(summary, summary.internalLocation.description),
                attributes: { 'data-qa': 'appointment-attendance-summary-' + loop.index + '-location' }
            }, {
                text: summary.startTime + (" to " + summary.endTime if summary.endTime),
                attributes: { 'data-qa': 'appointment-attendance-summary-' + loop.index + '-time' }
            }, {
                text: attendees(summary.attendees, prisonersDetails, user),
                attributes: { 'data-qa': 'appointment-attendance-summary-' + loop.index + '-attendee-count',
                    "data-sort-value": summary.attendees
                }
            },
             {
                text: summary.attendedCount,
                attributes: { 'data-qa': 'appointment-attendance-summary-' + loop.index + '-attended-count' }
            }, {
                text: summary.nonAttendedCount,
                attributes: { 'data-qa': 'appointment-attendance-summary-' + loop.index + '-non-attended-count' }
            }, {
                text: summary.notRecordedCount,
                attributes: { 'data-qa': 'appointment-attendance-summary-' + loop.index + '-not-recorded-count' }
            }
        ]
    }), summariesTableRows) %}
{% endfor %}

{% block content %}
    <form id="filter-form" method="POST" novalidate>

        <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>

        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                <span class="govuk-caption-l">Record appointment attendance</span>
                <h1 class="govuk-heading-l govuk-!-margin-0">Find an appointment to record or edit attendance</h1>
                <span class="govuk-caption-l govuk-!-margin-bottom-6" data-qa="date-caption">{{ date | formatDate }}</span>
            </div>
        </div>

        <p class="govuk-body">
            <a href="/appointments/attendance-summary/dashboard?date={{ date | toDateString }}" data-qa="summary-link" target='_blank'>Go to daily attendance summary</a>
        </p>

        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <h2 class="govuk-heading-s">Showing {{ summaries | length }} appointment{{ "s" if summaries | length != 1 }}</h2>

                {% if attendanceSummary.attendeeCount > 1 %}
                    <ul class="govuk-list govuk-!-margin-bottom-4">
                        <li>
                            <span>Attended:</span>
                            <span class="govuk-!-font-weight-bold">{{ attendanceSummary.attended }}</span> ({{ attendanceSummary.attendedPercentage }}%)
                        </li>
                        <li>
                            <span>Absent:</span>
                            <span class="govuk-!-font-weight-bold">{{ attendanceSummary.notAttended }}</span> ({{ attendanceSummary.notAttendedPercentage }}%)
                        </li>
                        <li>
                            <span>Not recorded yet:</span>
                            <span class="govuk-!-font-weight-bold">{{ attendanceSummary.notRecorded }}</span> ({{ attendanceSummary.notRecordedPercentage }}%)
                        </li>
                    </ul>
                {% endif %}

                {{ searchBar({
                    inputParams: {
                        id: 'searchTerm',
                        name: 'searchTerm',
                        label: {
                            text: 'Search by appointment name',
                            classes: 'govuk-label--s'
                        },
                        type: 'search',
                        value: session.req.query.searchTerm
                    },
                    buttonParams: {
                        text: 'Search'
                    }
                }) }}

                {% set filterOptionsHtml %}

                    {% set locationOptions = [{ value: '-', text: '' }] %}
                    {% for location in locations %}
                        {% set options = (locationOptions.push( { value: location.locationId, text: location.userDescription }), locationOptions) %}
                    {% endfor %}

                    {{ govukRadios({
                        id: "location-type",
                        name: "locationType",
                        classes: "govuk-radios--small govuk-!-margin-bottom-4",
                        fieldset: {
                            legend: {
                                text: 'Location',
                                classes: 'govuk-fieldset__legend--m'
                            }
                        },
                        items: [
                            {
                                value: "ALL",
                                text: "All locations",
                                checked: filterItems.locationType == 'ALL'
                            },
                            {
                                value: "OUT_OF_CELL",
                                text: "Search for a location",
                                checked: filterItems.locationType == 'OUT_OF_CELL',
                                conditional: {
                                    html: govukSelect({
                                        id: "locationId",
                                        name: "locationId",
                                        label: {
                                            text: "Start typing a location and select from the list."
                                        },
                                        errorMessage: validationErrors | findError('locationId'),
                                        value: filterItems.locationId,
                                        items: locationOptions
                                    })
                                }
                            },
                            {
                                value: "IN_CELL",
                                text: "In cell",
                                checked: filterItems.locationType == 'IN_CELL'
                            }
                        ]
                    }) }}

                    {{ govukButton({
                        text: 'Apply filters'
                    }) }}

                {% endset %}

                <div class="attendance-activities">
                    <div class="moj-filter-layout moj-filter-layout__flex" data-module="activities-list-filter" data-filter-start-shown="true">
                        <div class="moj-filter-layout__filter moj-filter-layout__flex govuk-!-display-none-print">
                            {{ mojFilter({
                                heading: {
                                    text: 'Filters'
                                },
                                optionsHtml: filterOptionsHtml
                            }) }}
                        </div>
                        <hr class="print-only"/>
                        <div class="moj-filter-layout__content">
                            <div class="moj-action-bar govuk-!-display-none-print">
                                <div class="moj-action-bar__filter"></div>
                            </div>

                            {{ stickySelect({
                                idPrefix: 'appointments',
                                type: 'check',
                                caption: "(" + summaries.length + ") appointments",
                                captionClasses: "govuk-visually-hidden",
                                name: 'appointmentIds',
                                head: [
                                    {
                                        text: "Appointment",
                                        attributes: { "aria-sort": "none" }
                                    }, {
                                        text: "Location",
                                        attributes: { "aria-sort": "none" }
                                    }, {
                                        text: "Time",
                                        attributes: { "aria-sort": "ascending" }
                                    }, {
                                        text: "Attendees",
                                        attributes: { "aria-sort": "none" }
                                    }, {
                                        text: "Attended",
                                        attributes: { "aria-sort": "none" }
                                    }, {
                                        text: "Did not attend",
                                        attributes: { "aria-sort": "none" }
                                    }, {
                                        text: "Not recorded yet",
                                        attributes: { "aria-sort": "none" }
                                    }
                                ],
                                rows: summariesTableRows,
                                actions: [
                                    {
                                        text: 'Record or edit attendance',
                                        formAction: 'summaries/select-appointments'
                                    }
                                ],
                                itemsDescription: 'appointment',
                                itemsDescriptionPlural: 'appointments'
                            }) }}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
{% endblock %}
