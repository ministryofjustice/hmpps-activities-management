{% extends "layout.njk" %}

{% from "govuk/components/button/macro.njk" import govukButton %}

{% from "components/datePicker.njk" import datePicker %}
{% from "components/timePicker.njk" import timePicker %}
{% from "pages/appointments/partials/appointment-journey-title.njk" import appointmentJourneyTitle %}
{% from "pages/appointments/partials/appointment-type-caption.njk" import appointmentTypeCaption %}

{% if session.appointmentJourney.mode == AppointmentJourneyMode.EDIT %}
    {% set pageTitle = appointmentJourneyTitle("change date and time", session.appointmentJourney) %}
    {% set pageHeading = "Enter the new date and time" %}
{% else %}
    {% set pageTitle = appointmentJourneyTitle("Date and time of appointment", session.appointmentJourney) %}
    {% set pageHeading = "When is the appointment?" %}
{% endif %}

{% set pageId = 'appointments-create-date-and-time-page' %}
{% set backLinkHref = backLinkHref %}

{% block content %}
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            {{ appointmentTypeCaption(session) }}
            <h1 class="govuk-heading-l">{{ pageHeading }}</h1>
            <form method="POST">
                <input type="hidden" name="_csrf" value="{{ csrfToken }}" />
                {{ datePicker({
                    id: 'startDate',
                    name: 'startDate',
                    label: {
                        text: "Date",
                        classes: "govuk-fieldset__legend--m"
                    },
                    hint: {
                        text: "For example, " | exampleDateOneWeekAhead
                    },
                    renderedErrorMessage: validationErrors | findError('startDate'),
                    validationErrors: validationErrors,
                    formResponses: formResponses.startDate or session.editAppointmentJourney.startDate or session.appointmentJourney.startDate
                }) }}
                {{ timePicker({
                    id: 'startTime',
                    name: 'startTime',
                    label: {
                        text: 'Start time',
                        classes: "govuk-fieldset__legend--m"
                    },
                    renderedErrorMessage: validationErrors | findError('startTime'),
                    validationErrors: validationErrors,
                    formResponses: formResponses.startTime or session.editAppointmentJourney.startTime or session.appointmentJourney.startTime
                }) }}
                {{ timePicker({
                    id: 'endTime',
                    name: 'endTime',
                    label: {
                        text: 'End time',
                        classes: "govuk-fieldset__legend--m"
                    },
                    renderedErrorMessage: validationErrors | findError('endTime'),
                    validationErrors: validationErrors,
                    formResponses: formResponses.endTime or session.editAppointmentJourney.endTime or session.appointmentJourney.endTime
                }) }}
                {{ govukButton({
                    text: "Continue"
                }) }}
            </form>
        </div>
    </div>
{% endblock %}
