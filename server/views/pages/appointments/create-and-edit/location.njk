{% extends "layout.njk" %}

{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "pages/appointments/partials/appointment-type-caption.njk" import appointmentTypeCaption %}

{% set pageTitle = "Appointments Management - Create Appointment - Location" %}
{% set pageId = 'appointments-create-location-page' %}
{% set backLinkHref = "/category" %}

{% set options = [{ value: "-", text: "" }] %}
{% for location in locations %}
    {% set options = (options.push( { value: location.locationId, text: location.userDescription }), options) %}
{% endfor %}

{% block meta %}
    <meta name="autocompleteElements" content="locationId"/>
{% endblock %}

{% block content %}
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            {{ appointmentTypeCaption(session.appointmentJourney.type) }}
            <form method="POST">
                <input type="hidden" name="_csrf" value="{{ csrfToken }}" />
                {{ govukSelect({
                    id: "locationId",
                    name: "locationId",
                    label: {
                        text: "Where is the appointment?",
                        classes: "govuk-label--l",
                        isPageHeading: true
                    },
                    hint: {
                        text: "Start typing a location and select from the list of options"
                    },
                    formGroup: {
                        classes: "location-autocomplete-formgroup"
                    },
                    errorMessage: validationErrors | findError('locationId'),
                    value: formResponses.locationId or session.appointmentJourney.location.id,
                    items: options
                }) }}

                {% if session.appointmentJourney.mode == AppointmentJourneyMode.EDIT and session.appointmentJourney.repeat == YesNo.YES %}
                    {% set applyTo = formResponses.applyTo or session.appointmentJourney.applyTo %}
                    {{ govukRadios({
                        name: "applyTo",
                        fieldset: {
                            legend: {
                                text: "How should this change be applied?",
                                classes: "govuk-fieldset__legend--m"
                            }
                        },
                        errorMessage: validationErrors | findError('applyTo'),
                        items: [
                            {
                                value: EditApplyTo.THIS_OCCURRENCE,
                                text: "This appointment only",
                                checked: applyTo == EditApplyTo.THIS_OCCURRENCE
                            },
                            {
                                value: EditApplyTo.THIS_AND_ALL_FUTURE_OCCURRENCES,
                                text: "This appointment and all appointments after this one in the series",
                                checked: applyTo == EditApplyTo.THIS_AND_ALL_FUTURE_OCCURRENCES
                            },
                            {
                                value: EditApplyTo.ALL_FUTURE_OCCURRENCES,
                                text: "All appointments in this series that have not taken place yet",
                                checked: applyTo == EditApplyTo.ALL_FUTURE_OCCURRENCES
                            }
                        ]
                    }) }}
                {% else %}
                    <input type="hidden" name="applyTo" value="{{ EditApplyTo.THIS_OCCURRENCE }}" />
                {% endif %}

                {{ govukButton({
                    text: "Save" if session.appointmentJourney.mode == "EDIT" else "Continue"
                }) }}
            </form>
        </div>
    </div>
{% endblock %}
