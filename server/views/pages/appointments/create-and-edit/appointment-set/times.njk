{% extends "layout.njk" %}

{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/warning-text/macro.njk" import govukWarningText %}
{% from "components/timePicker.njk" import timePicker %}
{% from "partials/showProfileLink.njk" import showProfileLink %}
{% from "partials/statusBasedCellLocation.njk" import statusBasedCellLocation %}
{% from "pages/appointments/partials/appointment-type-caption.njk" import appointmentTypeCaption %}
{% from "pages/appointments/partials/appointment-journey-title.njk" import appointmentJourneyTitle %}

{% set pageTitle = appointmentJourneyTitle("Review appointment start and end times", session.appointmentJourney) %}
{% set pageId = 'appointment-set-times-page' %}
{% set jsBackLink = true %}

{% block content %}
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            {{ appointmentTypeCaption(session) }}
            <h1 class="govuk-heading-l">Review appointment start and end times</h1>
            <p class="govuk-body">You can edit the start and end time for each appointment. Appointments can take place at the same time.</p>
        </div>
        <div class="govuk-grid-column-two-thirds">
            <form method="POST">
                {% set prisonersList = [] %}
                {% for appointment in appointments %}
                    {% set prisonersList = (prisonersList.push([
                        {
                            html: showProfileLink({
                                firstName: appointment.prisoner.firstName,
                                lastName: appointment.prisoner.lastName,
                                prisonerNumber: appointment.prisoner.number,
                                cellLocation: statusBasedCellLocation(appointment.prisoner.cellLocation, appointment.prisoner.status, appointment.prisoner.prisonCode == user.activeCaseLoadId),
                                inCaseLoad: appointment.prisoner.prisonCode == user.activeCaseLoadId
                            })
                        }, {
                            html: timePicker({
                                id: 'startTime-' + appointment.prisoner.number,
                                name: 'startTime[' + appointment.prisoner.number + ']',
                                hideLabels: true,
                                classes: 'govuk-!-margin-bottom-0',
                                renderedErrorMessage: validationErrors | findError('startTime-' + appointment.prisoner.number),
                                validationErrors: validationErrors,
                                formResponses: formResponses.startTime[appointment.prisoner.number] or appointment.startTime
                            })
                        }, {
                            html: timePicker({
                                id: 'endTime-' + appointment.prisoner.number,
                                name: 'endTime[' + appointment.prisoner.number + ']',
                                hideLabels: true,
                                classes: 'govuk-!-margin-bottom-0',
                                renderedErrorMessage: validationErrors | findError('endTime-' + appointment.prisoner.number),
                                validationErrors: validationErrors,
                                formResponses: formResponses.endTime[appointment.prisoner.number] or appointment.endTime
                            })
                        }
                    ]), prisonersList) %}
                {% endfor %}

                {{ govukTable({
                    head: [
                        {
                            text: "Name",
                            classes: 'govuk-table__header'
                        },
                        {
                            text: "Start time",
                            classes: 'govuk-table__header'
                        },
                        {
                            text: "End time",
                            classes: 'govuk-table__header'
                        }
                    ],
                    rows: prisonersList
                }) }}

                <input type="hidden" name="_csrf" value="{{ csrfToken }}" />
                <div class="govuk-button-group">
                    {{ govukButton({
                        text: "Continue"
                    }) }}
                </div>
            </form>
        </div>
    </div>
{% endblock %}
